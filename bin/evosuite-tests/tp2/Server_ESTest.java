/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 17 21:18:23 GMT 2016
 */

package tp2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import korat.finitization.impl.Finitization;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;
import tp2.Entry;
import tp2.IP;
import tp2.IPBan;
import tp2.Node;
import tp2.RealTime;
import tp2.Server;
import tp2.SinglyLinkedList;
import tp2.StrictlySortedSinglyLinkedList;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Server_ESTest extends Server_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 55 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true
   * Goal 3. tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true
   * Goal 4. tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - true
   * Goal 5. tp2.Server.update()V: I24 Branch 9 IFLE L148 - true
   * Goal 6. tp2.Server.update()V: I24 Branch 9 IFLE L148 - false
   * Goal 7. tp2.Server.update()V: I36 Branch 10 IFLE L148 - true
   * Goal 8. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 9. Branch tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 10. Branch tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 11. Branch tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 12. Branch tp2.Server.update()V: I24 Branch 9 IFLE L148 - false in context: tp2.Server:update()V
   * Goal 13. Branch tp2.Server.update()V: I36 Branch 10 IFLE L148 - true in context: tp2.Server:update()V
   * Goal 14. Branch tp2.Server.update()V: I24 Branch 9 IFLE L148 - true in context: tp2.Server:update()V
   * Goal 15. [Output]: tp2.Server.addBan(Ltp2/IP;)Z:True
   * Goal 16. tp2.Server.<init>()V: Line 31
   * Goal 17. tp2.Server.<init>()V: Line 58
   * Goal 18. tp2.Server.<init>()V: Line 59
   * Goal 19. tp2.Server.<init>()V: Line 60
   * Goal 20. tp2.Server.<init>()V: Line 61
   * Goal 21. tp2.Server.<init>()V: Line 62
   * Goal 22. tp2.Server.addBan(Ltp2/IP;)Z: Line 106
   * Goal 23. tp2.Server.addBan(Ltp2/IP;)Z: Line 109
   * Goal 24. tp2.Server.addBan(Ltp2/IP;)Z: Line 114
   * Goal 25. tp2.Server.addBan(Ltp2/IP;)Z: Line 118
   * Goal 26. tp2.Server.addBan(Ltp2/IP;)Z: Line 119
   * Goal 27. tp2.Server.addBan(Ltp2/IP;)Z: Line 124
   * Goal 28. tp2.Server.update()V: Line 146
   * Goal 29. tp2.Server.update()V: Line 148
   * Goal 30. tp2.Server.update()V: Line 149
   * Goal 31. tp2.Server.update()V: Line 151
   * Goal 32. [METHOD] tp2.Server.<init>()V
   * Goal 33. [METHOD] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 34. [METHOD] tp2.Server.update()V
   * Goal 35. [METHODNOEX] tp2.Server.<init>()V
   * Goal 36. [METHODNOEX] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 37. [METHODNOEX] tp2.Server.update()V
   * Goal 38. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 39. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 40. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 41. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 42. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 43. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 44. Weak Mutation 14: tp2.Server.addBan(Ltp2/IP;)Z:106 - ReplaceComparisonOperator != null -> = null
   * Goal 45. Weak Mutation 16: tp2.Server.addBan(Ltp2/IP;)Z:109 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 18: tp2.Server.addBan(Ltp2/IP;)Z:114 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 20: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> %
   * Goal 48. Weak Mutation 21: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> -
   * Goal 49. Weak Mutation 22: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> *
   * Goal 50. Weak Mutation 23: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> /
   * Goal 51. Weak Mutation 24: tp2.Server.addBan(Ltp2/IP;)Z:124 - ReplaceConstant - 1 -> 0
   * Goal 52. Weak Mutation 28: tp2.Server.update()V:148 - ReplaceComparisonOperator <= -> -1
   * Goal 53. Weak Mutation 30: tp2.Server.update()V:148 - ReplaceComparisonOperator <= -> <
   * Goal 54. Weak Mutation 31: tp2.Server.update()V:148 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 34: tp2.Server.update()V:148 - ReplaceComparisonOperator <= -> <
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Server server0 = new Server();
      Integer integer0 = new Integer((-12));
      IP iP0 = new IP(integer0, integer0, integer0, integer0);
      server0.addBan(iP0);
      System.setCurrentTimeMillis(1392409341320L);
      server0.update();
  }

  //Test case number: 1
  /*
   * 24 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.update()V: I24 Branch 9 IFLE L148 - true
   * Goal 3. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 4. Branch tp2.Server.update()V: I24 Branch 9 IFLE L148 - true in context: tp2.Server:update()V
   * Goal 5. tp2.Server.<init>()V: Line 31
   * Goal 6. tp2.Server.<init>()V: Line 58
   * Goal 7. tp2.Server.<init>()V: Line 59
   * Goal 8. tp2.Server.<init>()V: Line 60
   * Goal 9. tp2.Server.<init>()V: Line 61
   * Goal 10. tp2.Server.<init>()V: Line 62
   * Goal 11. tp2.Server.update()V: Line 146
   * Goal 12. tp2.Server.update()V: Line 148
   * Goal 13. tp2.Server.update()V: Line 151
   * Goal 14. [METHOD] tp2.Server.<init>()V
   * Goal 15. [METHOD] tp2.Server.update()V
   * Goal 16. [METHODNOEX] tp2.Server.<init>()V
   * Goal 17. [METHODNOEX] tp2.Server.update()V
   * Goal 18. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 19. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 20. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 21. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 22. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 23. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 24. Weak Mutation 29: tp2.Server.update()V:148 - ReplaceComparisonOperator <= -> ==
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Server server0 = new Server();
      StrictlySortedSinglyLinkedList strictlySortedSinglyLinkedList0 = new StrictlySortedSinglyLinkedList();
      server0.bans = strictlySortedSinglyLinkedList0;
      strictlySortedSinglyLinkedList0.size = (-768);
      server0.update();
  }

  //Test case number: 2
  /*
   * 36 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.removeException(Ltp2/IP;)Z: root-Branch
   * Goal 3. tp2.Server.addException(Ltp2/IP;)Z: I3 Branch 3 IFNULL L82 - false
   * Goal 4. tp2.Server.addException(Ltp2/IP;)Z: I8 Branch 4 IFEQ L82 - true
   * Goal 5. Branch tp2.Server.removeException(Ltp2/IP;)Z: root-Branch in context: tp2.Server:removeException(Ltp2/IP;)Z
   * Goal 6. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 7. Branch tp2.Server.addException(Ltp2/IP;)Z: I8 Branch 4 IFEQ L82 - true in context: tp2.Server:addException(Ltp2/IP;)Z
   * Goal 8. Branch tp2.Server.addException(Ltp2/IP;)Z: I3 Branch 3 IFNULL L82 - false in context: tp2.Server:addException(Ltp2/IP;)Z
   * Goal 9. [Output]: tp2.Server.addException(Ltp2/IP;)Z:True
   * Goal 10. [Output]: tp2.Server.removeException(Ltp2/IP;)Z:True
   * Goal 11. tp2.Server.<init>()V: Line 31
   * Goal 12. tp2.Server.<init>()V: Line 58
   * Goal 13. tp2.Server.<init>()V: Line 59
   * Goal 14. tp2.Server.<init>()V: Line 60
   * Goal 15. tp2.Server.<init>()V: Line 61
   * Goal 16. tp2.Server.<init>()V: Line 62
   * Goal 17. tp2.Server.addException(Ltp2/IP;)Z: Line 82
   * Goal 18. tp2.Server.addException(Ltp2/IP;)Z: Line 86
   * Goal 19. tp2.Server.addException(Ltp2/IP;)Z: Line 87
   * Goal 20. tp2.Server.addException(Ltp2/IP;)Z: Line 88
   * Goal 21. tp2.Server.removeException(Ltp2/IP;)Z: Line 97
   * Goal 22. [METHOD] tp2.Server.<init>()V
   * Goal 23. [METHOD] tp2.Server.addException(Ltp2/IP;)Z
   * Goal 24. [METHOD] tp2.Server.removeException(Ltp2/IP;)Z
   * Goal 25. [METHODNOEX] tp2.Server.<init>()V
   * Goal 26. [METHODNOEX] tp2.Server.addException(Ltp2/IP;)Z
   * Goal 27. [METHODNOEX] tp2.Server.removeException(Ltp2/IP;)Z
   * Goal 28. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 29. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 30. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 31. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 32. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 33. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 34. Weak Mutation 10: tp2.Server.addException(Ltp2/IP;)Z:82 - ReplaceComparisonOperator = null -> != null
   * Goal 35. Weak Mutation 11: tp2.Server.addException(Ltp2/IP;)Z:82 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 13: tp2.Server.addException(Ltp2/IP;)Z:88 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Server server0 = new Server();
      Integer integer0 = new Integer((-244));
      IP iP0 = new IP(integer0, integer0, integer0, integer0);
      boolean boolean0 = server0.addException(iP0);
      assertTrue(boolean0);
      
      boolean boolean1 = server0.removeException(iP0);
      assertTrue(boolean1);
  }

  //Test case number: 3
  /*
   * 24 covered goals:
   * Goal 1. tp2.Server.toString()Ljava/lang/String;: root-Branch
   * Goal 2. tp2.Server.<init>()V: root-Branch
   * Goal 3. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 4. Branch tp2.Server.toString()Ljava/lang/String;: root-Branch in context: tp2.Server:toString()Ljava/lang/String;
   * Goal 5. toString()Ljava/lang/String;_java.lang.NullPointerException_IMPLICIT
   * Goal 6. tp2.Server.<init>()V: Line 31
   * Goal 7. tp2.Server.<init>()V: Line 58
   * Goal 8. tp2.Server.<init>()V: Line 59
   * Goal 9. tp2.Server.<init>()V: Line 60
   * Goal 10. tp2.Server.<init>()V: Line 61
   * Goal 11. tp2.Server.<init>()V: Line 62
   * Goal 12. tp2.Server.toString()Ljava/lang/String;: Line 297
   * Goal 13. [METHOD] tp2.Server.<init>()V
   * Goal 14. [METHOD] tp2.Server.toString()Ljava/lang/String;
   * Goal 15. [METHODNOEX] tp2.Server.<init>()V
   * Goal 16. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 17. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 18. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 19. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 20. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 21. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 22. Weak Mutation 301: tp2.Server.toString()Ljava/lang/String;:297 - ReplaceConstant - Server [lastUpdate= -> 
   * Goal 23. Weak Mutation 302: tp2.Server.toString()Ljava/lang/String;:297 - ReplaceConstant - , exceptions= -> 
   * Goal 24. Weak Mutation 303: tp2.Server.toString()Ljava/lang/String;:297 - ReplaceConstant - , bans= -> 
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Server server0 = new Server();
      server0.bans = null;
      // Undeclared exception!
      try { 
        server0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tp2.Server", e);
      }
  }

  //Test case number: 4
  /*
   * 21 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.removeException(Ltp2/IP;)Z: root-Branch
   * Goal 3. Branch tp2.Server.removeException(Ltp2/IP;)Z: root-Branch in context: tp2.Server:removeException(Ltp2/IP;)Z
   * Goal 4. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 5. removeException(Ltp2/IP;)Z_java.lang.NullPointerException_IMPLICIT
   * Goal 6. tp2.Server.<init>()V: Line 31
   * Goal 7. tp2.Server.<init>()V: Line 58
   * Goal 8. tp2.Server.<init>()V: Line 59
   * Goal 9. tp2.Server.<init>()V: Line 60
   * Goal 10. tp2.Server.<init>()V: Line 61
   * Goal 11. tp2.Server.<init>()V: Line 62
   * Goal 12. tp2.Server.removeException(Ltp2/IP;)Z: Line 97
   * Goal 13. [METHOD] tp2.Server.<init>()V
   * Goal 14. [METHOD] tp2.Server.removeException(Ltp2/IP;)Z
   * Goal 15. [METHODNOEX] tp2.Server.<init>()V
   * Goal 16. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 17. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 18. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 19. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 20. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 21. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Server server0 = new Server();
      SinglyLinkedList singlyLinkedList0 = server0.exceptions;
      Entry entry0 = singlyLinkedList0.header;
      entry0.next = entry0;
      // Undeclared exception!
      try { 
        server0.removeException((IP) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tp2.SinglyLinkedList", e);
      }
  }

  //Test case number: 5
  /*
   * 19 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 3. removeBan(Ltp2/IP;)Z_java.lang.NullPointerException_IMPLICIT
   * Goal 4. tp2.Server.<init>()V: Line 31
   * Goal 5. tp2.Server.<init>()V: Line 58
   * Goal 6. tp2.Server.<init>()V: Line 59
   * Goal 7. tp2.Server.<init>()V: Line 60
   * Goal 8. tp2.Server.<init>()V: Line 61
   * Goal 9. tp2.Server.<init>()V: Line 62
   * Goal 10. tp2.Server.removeBan(Ltp2/IP;)Z: Line 131
   * Goal 11. [METHOD] tp2.Server.<init>()V
   * Goal 12. [METHOD] tp2.Server.removeBan(Ltp2/IP;)Z
   * Goal 13. [METHODNOEX] tp2.Server.<init>()V
   * Goal 14. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 15. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 16. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 17. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 18. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 19. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Server server0 = new Server();
      server0.bans = null;
      // Undeclared exception!
      try { 
        server0.removeBan((IP) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tp2.Server", e);
      }
  }

  //Test case number: 6
  /*
   * 22 covered goals:
   * Goal 1. finServer(I)Lkorat/finitization/IFinitization;_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 2. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 229
   * Goal 3. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 231
   * Goal 4. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 232
   * Goal 5. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 235
   * Goal 6. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 236
   * Goal 7. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 237
   * Goal 8. [METHOD] tp2.Server.finServer(I)Lkorat/finitization/IFinitization;
   * Goal 9. Weak Mutation 264: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:231 - ReplaceConstant - 0 -> 1
   * Goal 10. Weak Mutation 265: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:232 - ReplaceConstant - 1 -> 0
   * Goal 11. Weak Mutation 266: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:235 - ReplaceConstant - 1 -> 0
   * Goal 12. Weak Mutation 267: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceVariable entries -> exceptionsLists
   * Goal 13. Weak Mutation 268: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - InsertUnaryOp Negation of maxSizeLists
   * Goal 14. Weak Mutation 269: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - InsertUnaryOp IINC 1 maxSizeLists
   * Goal 15. Weak Mutation 270: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - InsertUnaryOp IINC -1 maxSizeLists
   * Goal 16. Weak Mutation 271: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceConstant - 1 -> 0
   * Goal 17. Weak Mutation 272: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 273: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceArithmeticOperator + -> -
   * Goal 19. Weak Mutation 274: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceArithmeticOperator + -> *
   * Goal 20. Weak Mutation 275: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceArithmeticOperator + -> /
   * Goal 21. Weak Mutation 276: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:237 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 277: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:237 - InsertUnaryOp Negation of maxSizeLists
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        Server.finServer(Integer.MAX_VALUE);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  //Test case number: 7
  /*
   * 22 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.connect(Ltp2/IP;)Z: I3 Branch 1 IFNULL L70 - false
   * Goal 3. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 4. Branch tp2.Server.connect(Ltp2/IP;)Z: I3 Branch 1 IFNULL L70 - false in context: tp2.Server:connect(Ltp2/IP;)Z
   * Goal 5. connect(Ltp2/IP;)Z_java.lang.NullPointerException_IMPLICIT
   * Goal 6. tp2.Server.<init>()V: Line 31
   * Goal 7. tp2.Server.<init>()V: Line 58
   * Goal 8. tp2.Server.<init>()V: Line 59
   * Goal 9. tp2.Server.<init>()V: Line 60
   * Goal 10. tp2.Server.<init>()V: Line 61
   * Goal 11. tp2.Server.<init>()V: Line 62
   * Goal 12. tp2.Server.connect(Ltp2/IP;)Z: Line 70
   * Goal 13. [METHOD] tp2.Server.<init>()V
   * Goal 14. [METHOD] tp2.Server.connect(Ltp2/IP;)Z
   * Goal 15. [METHODNOEX] tp2.Server.<init>()V
   * Goal 16. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 17. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 18. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 19. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 20. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 21. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 22. Weak Mutation 6: tp2.Server.connect(Ltp2/IP;)Z:70 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Server server0 = new Server();
      Integer integer0 = new Integer((-244));
      IP iP0 = new IP(integer0, integer0, integer0, integer0);
      server0.bans = null;
      // Undeclared exception!
      try { 
        server0.connect(iP0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tp2.Server", e);
      }
  }

  //Test case number: 8
  /*
   * 22 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.addException(Ltp2/IP;)Z: I3 Branch 3 IFNULL L82 - false
   * Goal 3. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 4. Branch tp2.Server.addException(Ltp2/IP;)Z: I3 Branch 3 IFNULL L82 - false in context: tp2.Server:addException(Ltp2/IP;)Z
   * Goal 5. addException(Ltp2/IP;)Z_java.lang.NullPointerException_IMPLICIT
   * Goal 6. tp2.Server.<init>()V: Line 31
   * Goal 7. tp2.Server.<init>()V: Line 58
   * Goal 8. tp2.Server.<init>()V: Line 59
   * Goal 9. tp2.Server.<init>()V: Line 60
   * Goal 10. tp2.Server.<init>()V: Line 61
   * Goal 11. tp2.Server.<init>()V: Line 62
   * Goal 12. tp2.Server.addException(Ltp2/IP;)Z: Line 82
   * Goal 13. [METHOD] tp2.Server.<init>()V
   * Goal 14. [METHOD] tp2.Server.addException(Ltp2/IP;)Z
   * Goal 15. [METHODNOEX] tp2.Server.<init>()V
   * Goal 16. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 17. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 18. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 19. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 20. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 21. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 22. Weak Mutation 10: tp2.Server.addException(Ltp2/IP;)Z:82 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Server server0 = new Server();
      Integer integer0 = new Integer(0);
      server0.exceptions = null;
      IP iP0 = new IP(integer0, (Integer) null, (Integer) null, integer0);
      // Undeclared exception!
      try { 
        server0.addException(iP0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tp2.Server", e);
      }
  }

  //Test case number: 9
  /*
   * 23 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true
   * Goal 3. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 4. Branch tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 5. addBan(Ltp2/IP;)Z_java.lang.NullPointerException_IMPLICIT
   * Goal 6. tp2.Server.<init>()V: Line 31
   * Goal 7. tp2.Server.<init>()V: Line 58
   * Goal 8. tp2.Server.<init>()V: Line 59
   * Goal 9. tp2.Server.<init>()V: Line 60
   * Goal 10. tp2.Server.<init>()V: Line 61
   * Goal 11. tp2.Server.<init>()V: Line 62
   * Goal 12. tp2.Server.addBan(Ltp2/IP;)Z: Line 106
   * Goal 13. tp2.Server.addBan(Ltp2/IP;)Z: Line 109
   * Goal 14. [METHOD] tp2.Server.<init>()V
   * Goal 15. [METHOD] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 16. [METHODNOEX] tp2.Server.<init>()V
   * Goal 17. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 18. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 19. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 20. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 21. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 22. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 23. Weak Mutation 14: tp2.Server.addBan(Ltp2/IP;)Z:106 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Server server0 = new Server();
      StrictlySortedSinglyLinkedList strictlySortedSinglyLinkedList0 = server0.bans;
      Node node0 = new Node();
      strictlySortedSinglyLinkedList0.header = node0;
      IP iP0 = new IP((Integer) 0, (Integer) 0, (Integer) 0, (Integer) 0);
      node0.next = strictlySortedSinglyLinkedList0.header;
      // Undeclared exception!
      try { 
        server0.addBan(iP0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tp2.StrictlySortedSinglyLinkedList", e);
      }
  }

  //Test case number: 10
  /*
   * 146 covered goals:
   * Goal 1. tp2.Server.fixedLongList()Ljava/util/List;: root-Branch
   * Goal 2. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: I121 Branch 19 IF_ICMPLT L251 - true
   * Goal 3. Branch tp2.Server.fixedLongList()Ljava/util/List;: root-Branch in context: 
   * Goal 4. Branch tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: I121 Branch 19 IF_ICMPLT L251 - true in context: tp2.Server:finServer(I)Lkorat/finitization/IFinitization;
   * Goal 5. finServer(I)Lkorat/finitization/IFinitization;_java.lang.IndexOutOfBoundsException_IMPLICIT
   * Goal 6. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 229
   * Goal 7. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 231
   * Goal 8. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 232
   * Goal 9. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 235
   * Goal 10. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 236
   * Goal 11. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 237
   * Goal 12. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 240
   * Goal 13. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 241
   * Goal 14. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 243
   * Goal 15. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 244
   * Goal 16. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 247
   * Goal 17. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 248
   * Goal 18. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 249
   * Goal 19. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 250
   * Goal 20. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 251
   * Goal 21. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 252
   * Goal 22. tp2.Server.fixedLongList()Ljava/util/List;: Line 201
   * Goal 23. tp2.Server.fixedLongList()Ljava/util/List;: Line 202
   * Goal 24. tp2.Server.fixedLongList()Ljava/util/List;: Line 203
   * Goal 25. tp2.Server.fixedLongList()Ljava/util/List;: Line 204
   * Goal 26. tp2.Server.fixedLongList()Ljava/util/List;: Line 205
   * Goal 27. tp2.Server.fixedLongList()Ljava/util/List;: Line 206
   * Goal 28. tp2.Server.fixedLongList()Ljava/util/List;: Line 207
   * Goal 29. tp2.Server.fixedLongList()Ljava/util/List;: Line 208
   * Goal 30. tp2.Server.fixedLongList()Ljava/util/List;: Line 209
   * Goal 31. tp2.Server.fixedLongList()Ljava/util/List;: Line 210
   * Goal 32. tp2.Server.fixedLongList()Ljava/util/List;: Line 211
   * Goal 33. tp2.Server.fixedLongList()Ljava/util/List;: Line 212
   * Goal 34. tp2.Server.fixedLongList()Ljava/util/List;: Line 213
   * Goal 35. tp2.Server.fixedLongList()Ljava/util/List;: Line 214
   * Goal 36. tp2.Server.fixedLongList()Ljava/util/List;: Line 215
   * Goal 37. tp2.Server.fixedLongList()Ljava/util/List;: Line 216
   * Goal 38. tp2.Server.fixedLongList()Ljava/util/List;: Line 217
   * Goal 39. tp2.Server.fixedLongList()Ljava/util/List;: Line 218
   * Goal 40. tp2.Server.fixedLongList()Ljava/util/List;: Line 219
   * Goal 41. tp2.Server.fixedLongList()Ljava/util/List;: Line 220
   * Goal 42. tp2.Server.fixedLongList()Ljava/util/List;: Line 221
   * Goal 43. tp2.Server.fixedLongList()Ljava/util/List;: Line 222
   * Goal 44. [METHOD] tp2.Server.finServer(I)Lkorat/finitization/IFinitization;
   * Goal 45. Weak Mutation 199: tp2.Server.fixedLongList()Ljava/util/List;:201 - ReplaceConstant - 20 -> 0
   * Goal 46. Weak Mutation 200: tp2.Server.fixedLongList()Ljava/util/List;:201 - ReplaceConstant - 20 -> 1
   * Goal 47. Weak Mutation 201: tp2.Server.fixedLongList()Ljava/util/List;:201 - ReplaceConstant - 20 -> -1
   * Goal 48. Weak Mutation 202: tp2.Server.fixedLongList()Ljava/util/List;:201 - ReplaceConstant - 20 -> 19
   * Goal 49. Weak Mutation 203: tp2.Server.fixedLongList()Ljava/util/List;:201 - ReplaceConstant - 20 -> 21
   * Goal 50. Weak Mutation 204: tp2.Server.fixedLongList()Ljava/util/List;:202 - ReplaceConstant - 100000 -> 0
   * Goal 51. Weak Mutation 205: tp2.Server.fixedLongList()Ljava/util/List;:202 - ReplaceConstant - 100000 -> 1
   * Goal 52. Weak Mutation 206: tp2.Server.fixedLongList()Ljava/util/List;:202 - ReplaceConstant - 100000 -> -1
   * Goal 53. Weak Mutation 207: tp2.Server.fixedLongList()Ljava/util/List;:202 - ReplaceConstant - 100000 -> 99999
   * Goal 54. Weak Mutation 208: tp2.Server.fixedLongList()Ljava/util/List;:202 - ReplaceConstant - 100000 -> 100001
   * Goal 55. Weak Mutation 209: tp2.Server.fixedLongList()Ljava/util/List;:203 - ReplaceConstant - 200000 -> 0
   * Goal 56. Weak Mutation 210: tp2.Server.fixedLongList()Ljava/util/List;:203 - ReplaceConstant - 200000 -> 1
   * Goal 57. Weak Mutation 211: tp2.Server.fixedLongList()Ljava/util/List;:203 - ReplaceConstant - 200000 -> -1
   * Goal 58. Weak Mutation 212: tp2.Server.fixedLongList()Ljava/util/List;:203 - ReplaceConstant - 200000 -> 199999
   * Goal 59. Weak Mutation 213: tp2.Server.fixedLongList()Ljava/util/List;:203 - ReplaceConstant - 200000 -> 200001
   * Goal 60. Weak Mutation 214: tp2.Server.fixedLongList()Ljava/util/List;:204 - ReplaceConstant - 300000 -> 0
   * Goal 61. Weak Mutation 215: tp2.Server.fixedLongList()Ljava/util/List;:204 - ReplaceConstant - 300000 -> 1
   * Goal 62. Weak Mutation 216: tp2.Server.fixedLongList()Ljava/util/List;:204 - ReplaceConstant - 300000 -> -1
   * Goal 63. Weak Mutation 217: tp2.Server.fixedLongList()Ljava/util/List;:204 - ReplaceConstant - 300000 -> 299999
   * Goal 64. Weak Mutation 218: tp2.Server.fixedLongList()Ljava/util/List;:204 - ReplaceConstant - 300000 -> 300001
   * Goal 65. Weak Mutation 219: tp2.Server.fixedLongList()Ljava/util/List;:205 - ReplaceConstant - 400000 -> 0
   * Goal 66. Weak Mutation 220: tp2.Server.fixedLongList()Ljava/util/List;:205 - ReplaceConstant - 400000 -> 1
   * Goal 67. Weak Mutation 221: tp2.Server.fixedLongList()Ljava/util/List;:205 - ReplaceConstant - 400000 -> -1
   * Goal 68. Weak Mutation 222: tp2.Server.fixedLongList()Ljava/util/List;:205 - ReplaceConstant - 400000 -> 399999
   * Goal 69. Weak Mutation 223: tp2.Server.fixedLongList()Ljava/util/List;:205 - ReplaceConstant - 400000 -> 400001
   * Goal 70. Weak Mutation 224: tp2.Server.fixedLongList()Ljava/util/List;:206 - ReplaceConstant - 500000 -> 0
   * Goal 71. Weak Mutation 225: tp2.Server.fixedLongList()Ljava/util/List;:206 - ReplaceConstant - 500000 -> 1
   * Goal 72. Weak Mutation 226: tp2.Server.fixedLongList()Ljava/util/List;:206 - ReplaceConstant - 500000 -> -1
   * Goal 73. Weak Mutation 227: tp2.Server.fixedLongList()Ljava/util/List;:206 - ReplaceConstant - 500000 -> 499999
   * Goal 74. Weak Mutation 228: tp2.Server.fixedLongList()Ljava/util/List;:206 - ReplaceConstant - 500000 -> 500001
   * Goal 75. Weak Mutation 229: tp2.Server.fixedLongList()Ljava/util/List;:207 - ReplaceConstant - 600000 -> 0
   * Goal 76. Weak Mutation 230: tp2.Server.fixedLongList()Ljava/util/List;:207 - ReplaceConstant - 600000 -> 1
   * Goal 77. Weak Mutation 231: tp2.Server.fixedLongList()Ljava/util/List;:207 - ReplaceConstant - 600000 -> -1
   * Goal 78. Weak Mutation 232: tp2.Server.fixedLongList()Ljava/util/List;:207 - ReplaceConstant - 600000 -> 599999
   * Goal 79. Weak Mutation 233: tp2.Server.fixedLongList()Ljava/util/List;:207 - ReplaceConstant - 600000 -> 600001
   * Goal 80. Weak Mutation 234: tp2.Server.fixedLongList()Ljava/util/List;:208 - ReplaceConstant - 700000 -> 0
   * Goal 81. Weak Mutation 235: tp2.Server.fixedLongList()Ljava/util/List;:208 - ReplaceConstant - 700000 -> 1
   * Goal 82. Weak Mutation 236: tp2.Server.fixedLongList()Ljava/util/List;:208 - ReplaceConstant - 700000 -> -1
   * Goal 83. Weak Mutation 237: tp2.Server.fixedLongList()Ljava/util/List;:208 - ReplaceConstant - 700000 -> 699999
   * Goal 84. Weak Mutation 238: tp2.Server.fixedLongList()Ljava/util/List;:208 - ReplaceConstant - 700000 -> 700001
   * Goal 85. Weak Mutation 239: tp2.Server.fixedLongList()Ljava/util/List;:209 - ReplaceConstant - 800000 -> 0
   * Goal 86. Weak Mutation 240: tp2.Server.fixedLongList()Ljava/util/List;:209 - ReplaceConstant - 800000 -> 1
   * Goal 87. Weak Mutation 241: tp2.Server.fixedLongList()Ljava/util/List;:209 - ReplaceConstant - 800000 -> -1
   * Goal 88. Weak Mutation 242: tp2.Server.fixedLongList()Ljava/util/List;:209 - ReplaceConstant - 800000 -> 799999
   * Goal 89. Weak Mutation 243: tp2.Server.fixedLongList()Ljava/util/List;:209 - ReplaceConstant - 800000 -> 800001
   * Goal 90. Weak Mutation 244: tp2.Server.fixedLongList()Ljava/util/List;:210 - ReplaceConstant - 900000 -> 0
   * Goal 91. Weak Mutation 245: tp2.Server.fixedLongList()Ljava/util/List;:210 - ReplaceConstant - 900000 -> 1
   * Goal 92. Weak Mutation 246: tp2.Server.fixedLongList()Ljava/util/List;:210 - ReplaceConstant - 900000 -> -1
   * Goal 93. Weak Mutation 247: tp2.Server.fixedLongList()Ljava/util/List;:210 - ReplaceConstant - 900000 -> 899999
   * Goal 94. Weak Mutation 248: tp2.Server.fixedLongList()Ljava/util/List;:210 - ReplaceConstant - 900000 -> 900001
   * Goal 95. Weak Mutation 249: tp2.Server.fixedLongList()Ljava/util/List;:211 - ReplaceConstant - 1000000 -> 0
   * Goal 96. Weak Mutation 250: tp2.Server.fixedLongList()Ljava/util/List;:211 - ReplaceConstant - 1000000 -> 1
   * Goal 97. Weak Mutation 251: tp2.Server.fixedLongList()Ljava/util/List;:211 - ReplaceConstant - 1000000 -> -1
   * Goal 98. Weak Mutation 252: tp2.Server.fixedLongList()Ljava/util/List;:211 - ReplaceConstant - 1000000 -> 999999
   * Goal 99. Weak Mutation 253: tp2.Server.fixedLongList()Ljava/util/List;:211 - ReplaceConstant - 1000000 -> 1000001
   * Goal 100. Weak Mutation 254: tp2.Server.fixedLongList()Ljava/util/List;:212 - ReplaceConstant - 1100000 -> 0
   * Goal 101. Weak Mutation 255: tp2.Server.fixedLongList()Ljava/util/List;:212 - ReplaceConstant - 1100000 -> 1
   * Goal 102. Weak Mutation 256: tp2.Server.fixedLongList()Ljava/util/List;:212 - ReplaceConstant - 1100000 -> -1
   * Goal 103. Weak Mutation 257: tp2.Server.fixedLongList()Ljava/util/List;:212 - ReplaceConstant - 1100000 -> 1099999
   * Goal 104. Weak Mutation 258: tp2.Server.fixedLongList()Ljava/util/List;:212 - ReplaceConstant - 1100000 -> 1100001
   * Goal 105. Weak Mutation 259: tp2.Server.fixedLongList()Ljava/util/List;:213 - ReplaceConstant - 1200000 -> 0
   * Goal 106. Weak Mutation 260: tp2.Server.fixedLongList()Ljava/util/List;:213 - ReplaceConstant - 1200000 -> 1
   * Goal 107. Weak Mutation 261: tp2.Server.fixedLongList()Ljava/util/List;:213 - ReplaceConstant - 1200000 -> -1
   * Goal 108. Weak Mutation 262: tp2.Server.fixedLongList()Ljava/util/List;:213 - ReplaceConstant - 1200000 -> 1199999
   * Goal 109. Weak Mutation 263: tp2.Server.fixedLongList()Ljava/util/List;:213 - ReplaceConstant - 1200000 -> 1200001
   * Goal 110. Weak Mutation 264: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:231 - ReplaceConstant - 0 -> 1
   * Goal 111. Weak Mutation 265: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:232 - ReplaceConstant - 1 -> 0
   * Goal 112. Weak Mutation 266: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:235 - ReplaceConstant - 1 -> 0
   * Goal 113. Weak Mutation 267: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceVariable entries -> exceptionsLists
   * Goal 114. Weak Mutation 268: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - InsertUnaryOp Negation of maxSizeLists
   * Goal 115. Weak Mutation 269: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - InsertUnaryOp IINC 1 maxSizeLists
   * Goal 116. Weak Mutation 270: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - InsertUnaryOp IINC -1 maxSizeLists
   * Goal 117. Weak Mutation 271: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceConstant - 1 -> 0
   * Goal 118. Weak Mutation 272: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceArithmeticOperator + -> %
   * Goal 119. Weak Mutation 273: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceArithmeticOperator + -> -
   * Goal 120. Weak Mutation 274: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceArithmeticOperator + -> *
   * Goal 121. Weak Mutation 275: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceArithmeticOperator + -> /
   * Goal 122. Weak Mutation 276: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:237 - ReplaceConstant - 0 -> 1
   * Goal 123. Weak Mutation 277: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:237 - InsertUnaryOp Negation of maxSizeLists
   * Goal 124. Weak Mutation 278: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:240 - ReplaceConstant - 0 -> 1
   * Goal 125. Weak Mutation 279: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:241 - ReplaceVariable bansLists -> exceptionsLists
   * Goal 126. Weak Mutation 280: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:241 - ReplaceVariable bansLists -> entries
   * Goal 127. Weak Mutation 281: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:241 - ReplaceConstant - 1 -> 0
   * Goal 128. Weak Mutation 282: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:243 - ReplaceConstant - 1 -> 0
   * Goal 129. Weak Mutation 283: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceVariable nodes -> entries
   * Goal 130. Weak Mutation 284: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceVariable nodes -> exceptionsLists
   * Goal 131. Weak Mutation 285: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceVariable nodes -> bansLists
   * Goal 132. Weak Mutation 286: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - InsertUnaryOp Negation of maxSizeLists
   * Goal 133. Weak Mutation 287: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - InsertUnaryOp IINC 1 maxSizeLists
   * Goal 134. Weak Mutation 288: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - InsertUnaryOp IINC -1 maxSizeLists
   * Goal 135. Weak Mutation 289: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceConstant - 1 -> 0
   * Goal 136. Weak Mutation 290: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceArithmeticOperator + -> %
   * Goal 137. Weak Mutation 291: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceArithmeticOperator + -> -
   * Goal 138. Weak Mutation 292: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceArithmeticOperator + -> *
   * Goal 139. Weak Mutation 293: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceArithmeticOperator + -> /
   * Goal 140. Weak Mutation 294: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:248 - ReplaceConstant - 0 -> 1
   * Goal 141. Weak Mutation 295: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:250 - ReplaceConstant - 0 -> 1
   * Goal 142. Weak Mutation 296: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:251 - ReplaceConstant - 0 -> 1
   * Goal 143. Weak Mutation 297: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:252 - ReplaceVariable i -> maxSizeLists
   * Goal 144. Weak Mutation 298: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:252 - InsertUnaryOp Negation of i
   * Goal 145. Weak Mutation 299: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:252 - InsertUnaryOp IINC 1 i
   * Goal 146. Weak Mutation 300: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:252 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        Server.finServer(1346);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 20, Size: 20
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  //Test case number: 11
  /*
   * 84 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true
   * Goal 3. tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true
   * Goal 4. tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - true
   * Goal 5. tp2.Server.repOK()Z: I16 Branch 11 IFNULL L157 - false
   * Goal 6. tp2.Server.repOK()Z: I19 Branch 12 IFNONNULL L157 - true
   * Goal 7. tp2.Server.repOK()Z: I30 Branch 13 IFEQ L159 - false
   * Goal 8. tp2.Server.repOK()Z: I35 Branch 14 IFNE L159 - true
   * Goal 9. tp2.Server.repOK()Z: I98 Branch 18 IFNE L161 - true
   * Goal 10. tp2.Server.repOK()Z: I98 Branch 18 IFNE L161 - false
   * Goal 11. tp2.Server.repOK()Z: I57 Branch 15 IFLE L162 - true
   * Goal 12. tp2.Server.repOK()Z: I63 Branch 16 IFEQ L162 - true
   * Goal 13. tp2.Server.repOK()Z: I89 Branch 17 IFGT L166 - true
   * Goal 14. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 15. Branch tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 16. Branch tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 17. Branch tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 18. Branch tp2.Server.repOK()Z: I19 Branch 12 IFNONNULL L157 - true in context: tp2.Server:repOK()Z
   * Goal 19. Branch tp2.Server.repOK()Z: I16 Branch 11 IFNULL L157 - false in context: tp2.Server:repOK()Z
   * Goal 20. Branch tp2.Server.repOK()Z: I35 Branch 14 IFNE L159 - true in context: tp2.Server:repOK()Z
   * Goal 21. Branch tp2.Server.repOK()Z: I30 Branch 13 IFEQ L159 - false in context: tp2.Server:repOK()Z
   * Goal 22. Branch tp2.Server.repOK()Z: I98 Branch 18 IFNE L161 - false in context: tp2.Server:repOK()Z
   * Goal 23. Branch tp2.Server.repOK()Z: I98 Branch 18 IFNE L161 - true in context: tp2.Server:repOK()Z
   * Goal 24. Branch tp2.Server.repOK()Z: I63 Branch 16 IFEQ L162 - true in context: tp2.Server:repOK()Z
   * Goal 25. Branch tp2.Server.repOK()Z: I57 Branch 15 IFLE L162 - true in context: tp2.Server:repOK()Z
   * Goal 26. Branch tp2.Server.repOK()Z: I89 Branch 17 IFGT L166 - true in context: tp2.Server:repOK()Z
   * Goal 27. [Output]: tp2.Server.addBan(Ltp2/IP;)Z:True
   * Goal 28. [Output]: tp2.Server.repOK()Z:True
   * Goal 29. tp2.Server.<init>()V: Line 31
   * Goal 30. tp2.Server.<init>()V: Line 58
   * Goal 31. tp2.Server.<init>()V: Line 59
   * Goal 32. tp2.Server.<init>()V: Line 60
   * Goal 33. tp2.Server.<init>()V: Line 61
   * Goal 34. tp2.Server.<init>()V: Line 62
   * Goal 35. tp2.Server.addBan(Ltp2/IP;)Z: Line 106
   * Goal 36. tp2.Server.addBan(Ltp2/IP;)Z: Line 109
   * Goal 37. tp2.Server.addBan(Ltp2/IP;)Z: Line 114
   * Goal 38. tp2.Server.addBan(Ltp2/IP;)Z: Line 118
   * Goal 39. tp2.Server.addBan(Ltp2/IP;)Z: Line 119
   * Goal 40. tp2.Server.addBan(Ltp2/IP;)Z: Line 124
   * Goal 41. tp2.Server.repOK()Z: Line 155
   * Goal 42. tp2.Server.repOK()Z: Line 156
   * Goal 43. tp2.Server.repOK()Z: Line 157
   * Goal 44. tp2.Server.repOK()Z: Line 159
   * Goal 45. tp2.Server.repOK()Z: Line 161
   * Goal 46. tp2.Server.repOK()Z: Line 162
   * Goal 47. tp2.Server.repOK()Z: Line 164
   * Goal 48. tp2.Server.repOK()Z: Line 165
   * Goal 49. tp2.Server.repOK()Z: Line 166
   * Goal 50. tp2.Server.repOK()Z: Line 169
   * Goal 51. [METHOD] tp2.Server.<init>()V
   * Goal 52. [METHOD] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 53. [METHOD] tp2.Server.repOK()Z
   * Goal 54. [METHODNOEX] tp2.Server.<init>()V
   * Goal 55. [METHODNOEX] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 56. [METHODNOEX] tp2.Server.repOK()Z
   * Goal 57. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 58. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 59. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 60. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 61. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 62. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 63. Weak Mutation 14: tp2.Server.addBan(Ltp2/IP;)Z:106 - ReplaceComparisonOperator != null -> = null
   * Goal 64. Weak Mutation 16: tp2.Server.addBan(Ltp2/IP;)Z:109 - ReplaceComparisonOperator == -> !=
   * Goal 65. Weak Mutation 18: tp2.Server.addBan(Ltp2/IP;)Z:114 - ReplaceComparisonOperator == -> !=
   * Goal 66. Weak Mutation 20: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> %
   * Goal 67. Weak Mutation 21: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> -
   * Goal 68. Weak Mutation 22: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> *
   * Goal 69. Weak Mutation 23: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> /
   * Goal 70. Weak Mutation 24: tp2.Server.addBan(Ltp2/IP;)Z:124 - ReplaceConstant - 1 -> 0
   * Goal 71. Weak Mutation 35: tp2.Server.repOK()Z:157 - ReplaceComparisonOperator = null -> != null
   * Goal 72. Weak Mutation 36: tp2.Server.repOK()Z:157 - ReplaceComparisonOperator != null -> = null
   * Goal 73. Weak Mutation 38: tp2.Server.repOK()Z:159 - ReplaceVariable exceptionsItems -> bansItems
   * Goal 74. Weak Mutation 39: tp2.Server.repOK()Z:159 - ReplaceComparisonOperator == -> !=
   * Goal 75. Weak Mutation 40: tp2.Server.repOK()Z:159 - ReplaceVariable bansItems -> exceptionsItems
   * Goal 76. Weak Mutation 41: tp2.Server.repOK()Z:159 - ReplaceComparisonOperator != -> ==
   * Goal 77. Weak Mutation 43: tp2.Server.repOK()Z:161 - ReplaceVariable bansItems -> exceptionsItems
   * Goal 78. Weak Mutation 56: tp2.Server.repOK()Z:161 - ReplaceComparisonOperator != -> ==
   * Goal 79. Weak Mutation 44: tp2.Server.repOK()Z:162 - ReplaceVariable exceptionsItems -> bansItems
   * Goal 80. Weak Mutation 46: tp2.Server.repOK()Z:162 - ReplaceComparisonOperator <= -> ==
   * Goal 81. Weak Mutation 49: tp2.Server.repOK()Z:162 - ReplaceConstant - 0 -> 1
   * Goal 82. Weak Mutation 50: tp2.Server.repOK()Z:162 - ReplaceComparisonOperator == -> !=
   * Goal 83. Weak Mutation 52: tp2.Server.repOK()Z:166 - ReplaceComparisonOperator > -> -2
   * Goal 84. Weak Mutation 57: tp2.Server.repOK()Z:169 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Server server0 = new Server();
      Integer integer0 = new Integer(0);
      IP iP0 = new IP(integer0, integer0, integer0, integer0);
      boolean boolean0 = server0.addBan(iP0);
      boolean boolean1 = server0.repOK();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  //Test case number: 12
  /*
   * 39 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.repOK()Z: I16 Branch 11 IFNULL L157 - false
   * Goal 3. tp2.Server.repOK()Z: I19 Branch 12 IFNONNULL L157 - true
   * Goal 4. tp2.Server.repOK()Z: I30 Branch 13 IFEQ L159 - false
   * Goal 5. tp2.Server.repOK()Z: I35 Branch 14 IFNE L159 - false
   * Goal 6. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 7. Branch tp2.Server.repOK()Z: I19 Branch 12 IFNONNULL L157 - true in context: tp2.Server:repOK()Z
   * Goal 8. Branch tp2.Server.repOK()Z: I16 Branch 11 IFNULL L157 - false in context: tp2.Server:repOK()Z
   * Goal 9. Branch tp2.Server.repOK()Z: I35 Branch 14 IFNE L159 - false in context: tp2.Server:repOK()Z
   * Goal 10. Branch tp2.Server.repOK()Z: I30 Branch 13 IFEQ L159 - false in context: tp2.Server:repOK()Z
   * Goal 11. [Output]: tp2.Server.repOK()Z:False
   * Goal 12. tp2.Server.<init>()V: Line 31
   * Goal 13. tp2.Server.<init>()V: Line 58
   * Goal 14. tp2.Server.<init>()V: Line 59
   * Goal 15. tp2.Server.<init>()V: Line 60
   * Goal 16. tp2.Server.<init>()V: Line 61
   * Goal 17. tp2.Server.<init>()V: Line 62
   * Goal 18. tp2.Server.repOK()Z: Line 155
   * Goal 19. tp2.Server.repOK()Z: Line 156
   * Goal 20. tp2.Server.repOK()Z: Line 157
   * Goal 21. tp2.Server.repOK()Z: Line 159
   * Goal 22. tp2.Server.repOK()Z: Line 160
   * Goal 23. [METHOD] tp2.Server.<init>()V
   * Goal 24. [METHOD] tp2.Server.repOK()Z
   * Goal 25. [METHODNOEX] tp2.Server.<init>()V
   * Goal 26. [METHODNOEX] tp2.Server.repOK()Z
   * Goal 27. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 28. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 29. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 30. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 31. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 32. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 33. Weak Mutation 35: tp2.Server.repOK()Z:157 - ReplaceComparisonOperator = null -> != null
   * Goal 34. Weak Mutation 36: tp2.Server.repOK()Z:157 - ReplaceComparisonOperator != null -> = null
   * Goal 35. Weak Mutation 38: tp2.Server.repOK()Z:159 - ReplaceVariable exceptionsItems -> bansItems
   * Goal 36. Weak Mutation 39: tp2.Server.repOK()Z:159 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 40: tp2.Server.repOK()Z:159 - ReplaceVariable bansItems -> exceptionsItems
   * Goal 38. Weak Mutation 41: tp2.Server.repOK()Z:159 - ReplaceComparisonOperator != -> ==
   * Goal 39. Weak Mutation 42: tp2.Server.repOK()Z:160 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Server server0 = new Server();
      StrictlySortedSinglyLinkedList strictlySortedSinglyLinkedList0 = new StrictlySortedSinglyLinkedList();
      server0.bans = strictlySortedSinglyLinkedList0;
      strictlySortedSinglyLinkedList0.size = (-768);
      boolean boolean0 = server0.repOK();
      assertFalse(boolean0);
  }

  //Test case number: 13
  /*
   * 49 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.addException(Ltp2/IP;)Z: I3 Branch 3 IFNULL L82 - false
   * Goal 3. tp2.Server.addException(Ltp2/IP;)Z: I8 Branch 4 IFEQ L82 - true
   * Goal 4. tp2.Server.repOK()Z: I16 Branch 11 IFNULL L157 - false
   * Goal 5. tp2.Server.repOK()Z: I19 Branch 12 IFNONNULL L157 - true
   * Goal 6. tp2.Server.repOK()Z: I30 Branch 13 IFEQ L159 - true
   * Goal 7. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 8. Branch tp2.Server.addException(Ltp2/IP;)Z: I8 Branch 4 IFEQ L82 - true in context: tp2.Server:addException(Ltp2/IP;)Z
   * Goal 9. Branch tp2.Server.addException(Ltp2/IP;)Z: I3 Branch 3 IFNULL L82 - false in context: tp2.Server:addException(Ltp2/IP;)Z
   * Goal 10. Branch tp2.Server.repOK()Z: I19 Branch 12 IFNONNULL L157 - true in context: tp2.Server:repOK()Z
   * Goal 11. Branch tp2.Server.repOK()Z: I16 Branch 11 IFNULL L157 - false in context: tp2.Server:repOK()Z
   * Goal 12. Branch tp2.Server.repOK()Z: I30 Branch 13 IFEQ L159 - true in context: tp2.Server:repOK()Z
   * Goal 13. [Output]: tp2.Server.addException(Ltp2/IP;)Z:True
   * Goal 14. [Output]: tp2.Server.repOK()Z:False
   * Goal 15. tp2.Server.<init>()V: Line 31
   * Goal 16. tp2.Server.<init>()V: Line 58
   * Goal 17. tp2.Server.<init>()V: Line 59
   * Goal 18. tp2.Server.<init>()V: Line 60
   * Goal 19. tp2.Server.<init>()V: Line 61
   * Goal 20. tp2.Server.<init>()V: Line 62
   * Goal 21. tp2.Server.addException(Ltp2/IP;)Z: Line 82
   * Goal 22. tp2.Server.addException(Ltp2/IP;)Z: Line 86
   * Goal 23. tp2.Server.addException(Ltp2/IP;)Z: Line 87
   * Goal 24. tp2.Server.addException(Ltp2/IP;)Z: Line 88
   * Goal 25. tp2.Server.repOK()Z: Line 155
   * Goal 26. tp2.Server.repOK()Z: Line 156
   * Goal 27. tp2.Server.repOK()Z: Line 157
   * Goal 28. tp2.Server.repOK()Z: Line 159
   * Goal 29. tp2.Server.repOK()Z: Line 160
   * Goal 30. [METHOD] tp2.Server.<init>()V
   * Goal 31. [METHOD] tp2.Server.addException(Ltp2/IP;)Z
   * Goal 32. [METHOD] tp2.Server.repOK()Z
   * Goal 33. [METHODNOEX] tp2.Server.<init>()V
   * Goal 34. [METHODNOEX] tp2.Server.addException(Ltp2/IP;)Z
   * Goal 35. [METHODNOEX] tp2.Server.repOK()Z
   * Goal 36. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 37. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 38. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 39. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 40. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 41. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 42. Weak Mutation 10: tp2.Server.addException(Ltp2/IP;)Z:82 - ReplaceComparisonOperator = null -> != null
   * Goal 43. Weak Mutation 11: tp2.Server.addException(Ltp2/IP;)Z:82 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 13: tp2.Server.addException(Ltp2/IP;)Z:88 - ReplaceConstant - 1 -> 0
   * Goal 45. Weak Mutation 35: tp2.Server.repOK()Z:157 - ReplaceComparisonOperator = null -> != null
   * Goal 46. Weak Mutation 36: tp2.Server.repOK()Z:157 - ReplaceComparisonOperator != null -> = null
   * Goal 47. Weak Mutation 38: tp2.Server.repOK()Z:159 - ReplaceVariable exceptionsItems -> bansItems
   * Goal 48. Weak Mutation 39: tp2.Server.repOK()Z:159 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 42: tp2.Server.repOK()Z:160 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Server server0 = new Server();
      Integer integer0 = new Integer(0);
      IP iP0 = new IP(integer0, integer0, integer0, integer0);
      server0.addException(iP0);
      SinglyLinkedList singlyLinkedList0 = server0.exceptions;
      singlyLinkedList0.add(iP0);
      assertEquals(2, singlyLinkedList0.getSize());
      
      boolean boolean0 = server0.repOK();
      assertFalse(boolean0);
  }

  //Test case number: 14
  /*
   * 30 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.repOK()Z: I16 Branch 11 IFNULL L157 - false
   * Goal 3. tp2.Server.repOK()Z: I19 Branch 12 IFNONNULL L157 - false
   * Goal 4. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 5. Branch tp2.Server.repOK()Z: I16 Branch 11 IFNULL L157 - false in context: tp2.Server:repOK()Z
   * Goal 6. Branch tp2.Server.repOK()Z: I19 Branch 12 IFNONNULL L157 - false in context: tp2.Server:repOK()Z
   * Goal 7. [Output]: tp2.Server.repOK()Z:False
   * Goal 8. tp2.Server.<init>()V: Line 31
   * Goal 9. tp2.Server.<init>()V: Line 58
   * Goal 10. tp2.Server.<init>()V: Line 59
   * Goal 11. tp2.Server.<init>()V: Line 60
   * Goal 12. tp2.Server.<init>()V: Line 61
   * Goal 13. tp2.Server.<init>()V: Line 62
   * Goal 14. tp2.Server.repOK()Z: Line 155
   * Goal 15. tp2.Server.repOK()Z: Line 156
   * Goal 16. tp2.Server.repOK()Z: Line 157
   * Goal 17. tp2.Server.repOK()Z: Line 158
   * Goal 18. [METHOD] tp2.Server.<init>()V
   * Goal 19. [METHOD] tp2.Server.repOK()Z
   * Goal 20. [METHODNOEX] tp2.Server.<init>()V
   * Goal 21. [METHODNOEX] tp2.Server.repOK()Z
   * Goal 22. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 23. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 24. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 25. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 26. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 27. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 28. Weak Mutation 35: tp2.Server.repOK()Z:157 - ReplaceComparisonOperator = null -> != null
   * Goal 29. Weak Mutation 36: tp2.Server.repOK()Z:157 - ReplaceComparisonOperator != null -> = null
   * Goal 30. Weak Mutation 37: tp2.Server.repOK()Z:158 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Server server0 = new Server();
      server0.bans = null;
      boolean boolean0 = server0.repOK();
      assertFalse(boolean0);
  }

  //Test case number: 15
  /*
   * 27 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.repOK()Z: I16 Branch 11 IFNULL L157 - true
   * Goal 3. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 4. Branch tp2.Server.repOK()Z: I16 Branch 11 IFNULL L157 - true in context: tp2.Server:repOK()Z
   * Goal 5. [Output]: tp2.Server.repOK()Z:False
   * Goal 6. tp2.Server.<init>()V: Line 31
   * Goal 7. tp2.Server.<init>()V: Line 58
   * Goal 8. tp2.Server.<init>()V: Line 59
   * Goal 9. tp2.Server.<init>()V: Line 60
   * Goal 10. tp2.Server.<init>()V: Line 61
   * Goal 11. tp2.Server.<init>()V: Line 62
   * Goal 12. tp2.Server.repOK()Z: Line 155
   * Goal 13. tp2.Server.repOK()Z: Line 156
   * Goal 14. tp2.Server.repOK()Z: Line 157
   * Goal 15. tp2.Server.repOK()Z: Line 158
   * Goal 16. [METHOD] tp2.Server.<init>()V
   * Goal 17. [METHOD] tp2.Server.repOK()Z
   * Goal 18. [METHODNOEX] tp2.Server.<init>()V
   * Goal 19. [METHODNOEX] tp2.Server.repOK()Z
   * Goal 20. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 21. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 22. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 23. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 24. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 25. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 26. Weak Mutation 35: tp2.Server.repOK()Z:157 - ReplaceComparisonOperator = null -> != null
   * Goal 27. Weak Mutation 37: tp2.Server.repOK()Z:158 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Server server0 = new Server();
      server0.exceptions = null;
      boolean boolean0 = server0.repOK();
      assertFalse(boolean0);
  }

  //Test case number: 16
  /*
   * 28 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.update()V: I24 Branch 9 IFLE L148 - false
   * Goal 3. tp2.Server.update()V: I36 Branch 10 IFLE L148 - true
   * Goal 4. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 5. Branch tp2.Server.update()V: I24 Branch 9 IFLE L148 - false in context: tp2.Server:update()V
   * Goal 6. Branch tp2.Server.update()V: I36 Branch 10 IFLE L148 - true in context: tp2.Server:update()V
   * Goal 7. update()V_java.lang.NullPointerException_IMPLICIT
   * Goal 8. tp2.Server.<init>()V: Line 31
   * Goal 9. tp2.Server.<init>()V: Line 58
   * Goal 10. tp2.Server.<init>()V: Line 59
   * Goal 11. tp2.Server.<init>()V: Line 60
   * Goal 12. tp2.Server.<init>()V: Line 61
   * Goal 13. tp2.Server.<init>()V: Line 62
   * Goal 14. tp2.Server.update()V: Line 146
   * Goal 15. tp2.Server.update()V: Line 148
   * Goal 16. tp2.Server.update()V: Line 149
   * Goal 17. [METHOD] tp2.Server.<init>()V
   * Goal 18. [METHOD] tp2.Server.update()V
   * Goal 19. [METHODNOEX] tp2.Server.<init>()V
   * Goal 20. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 21. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 22. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 23. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 24. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 25. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 26. Weak Mutation 28: tp2.Server.update()V:148 - ReplaceComparisonOperator <= -> -1
   * Goal 27. Weak Mutation 31: tp2.Server.update()V:148 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 33: tp2.Server.update()V:148 - ReplaceComparisonOperator <= -> ==
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Server server0 = new Server();
      StrictlySortedSinglyLinkedList strictlySortedSinglyLinkedList0 = new StrictlySortedSinglyLinkedList();
      Long long0 = new Long((long) 0);
      IPBan iPBan0 = new IPBan((IP) null, long0);
      strictlySortedSinglyLinkedList0.add(iPBan0);
      server0.bans = strictlySortedSinglyLinkedList0;
      // Undeclared exception!
      try { 
        server0.update();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tp2.StrictlySortedSinglyLinkedList", e);
      }
  }

  //Test case number: 17
  /*
   * 51 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true
   * Goal 3. tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true
   * Goal 4. tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - true
   * Goal 5. tp2.Server.update()V: I24 Branch 9 IFLE L148 - false
   * Goal 6. tp2.Server.update()V: I36 Branch 10 IFLE L148 - false
   * Goal 7. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 8. Branch tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 9. Branch tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 10. Branch tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 11. Branch tp2.Server.update()V: I24 Branch 9 IFLE L148 - false in context: tp2.Server:update()V
   * Goal 12. Branch tp2.Server.update()V: I36 Branch 10 IFLE L148 - false in context: tp2.Server:update()V
   * Goal 13. [Output]: tp2.Server.addBan(Ltp2/IP;)Z:True
   * Goal 14. tp2.Server.<init>()V: Line 31
   * Goal 15. tp2.Server.<init>()V: Line 58
   * Goal 16. tp2.Server.<init>()V: Line 59
   * Goal 17. tp2.Server.<init>()V: Line 60
   * Goal 18. tp2.Server.<init>()V: Line 61
   * Goal 19. tp2.Server.<init>()V: Line 62
   * Goal 20. tp2.Server.addBan(Ltp2/IP;)Z: Line 106
   * Goal 21. tp2.Server.addBan(Ltp2/IP;)Z: Line 109
   * Goal 22. tp2.Server.addBan(Ltp2/IP;)Z: Line 114
   * Goal 23. tp2.Server.addBan(Ltp2/IP;)Z: Line 118
   * Goal 24. tp2.Server.addBan(Ltp2/IP;)Z: Line 119
   * Goal 25. tp2.Server.addBan(Ltp2/IP;)Z: Line 124
   * Goal 26. tp2.Server.update()V: Line 146
   * Goal 27. tp2.Server.update()V: Line 148
   * Goal 28. tp2.Server.update()V: Line 151
   * Goal 29. [METHOD] tp2.Server.<init>()V
   * Goal 30. [METHOD] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 31. [METHOD] tp2.Server.update()V
   * Goal 32. [METHODNOEX] tp2.Server.<init>()V
   * Goal 33. [METHODNOEX] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 34. [METHODNOEX] tp2.Server.update()V
   * Goal 35. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 36. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 37. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 38. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 39. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 40. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 41. Weak Mutation 14: tp2.Server.addBan(Ltp2/IP;)Z:106 - ReplaceComparisonOperator != null -> = null
   * Goal 42. Weak Mutation 16: tp2.Server.addBan(Ltp2/IP;)Z:109 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 18: tp2.Server.addBan(Ltp2/IP;)Z:114 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 20: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> %
   * Goal 45. Weak Mutation 21: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> -
   * Goal 46. Weak Mutation 22: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> *
   * Goal 47. Weak Mutation 23: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> /
   * Goal 48. Weak Mutation 24: tp2.Server.addBan(Ltp2/IP;)Z:124 - ReplaceConstant - 1 -> 0
   * Goal 49. Weak Mutation 28: tp2.Server.update()V:148 - ReplaceComparisonOperator <= -> -1
   * Goal 50. Weak Mutation 31: tp2.Server.update()V:148 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 32: tp2.Server.update()V:148 - ReplaceComparisonOperator <= -> -1
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Server server0 = new Server();
      Integer integer0 = new Integer(0);
      IP iP0 = new IP(integer0, integer0, integer0, integer0);
      server0.addBan(iP0);
      server0.update();
  }

  //Test case number: 18
  /*
   * 25 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.removeBan(Ltp2/IP;)Z: I6 Branch 8 IFNE L131 - false
   * Goal 3. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 4. Branch tp2.Server.removeBan(Ltp2/IP;)Z: I6 Branch 8 IFNE L131 - false in context: tp2.Server:removeBan(Ltp2/IP;)Z
   * Goal 5. [Output]: tp2.Server.removeBan(Ltp2/IP;)Z:False
   * Goal 6. tp2.Server.<init>()V: Line 31
   * Goal 7. tp2.Server.<init>()V: Line 58
   * Goal 8. tp2.Server.<init>()V: Line 59
   * Goal 9. tp2.Server.<init>()V: Line 60
   * Goal 10. tp2.Server.<init>()V: Line 61
   * Goal 11. tp2.Server.<init>()V: Line 62
   * Goal 12. tp2.Server.removeBan(Ltp2/IP;)Z: Line 131
   * Goal 13. tp2.Server.removeBan(Ltp2/IP;)Z: Line 132
   * Goal 14. [METHOD] tp2.Server.<init>()V
   * Goal 15. [METHOD] tp2.Server.removeBan(Ltp2/IP;)Z
   * Goal 16. [METHODNOEX] tp2.Server.<init>()V
   * Goal 17. [METHODNOEX] tp2.Server.removeBan(Ltp2/IP;)Z
   * Goal 18. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 19. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 20. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 21. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 22. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 23. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 24. Weak Mutation 25: tp2.Server.removeBan(Ltp2/IP;)Z:131 - ReplaceComparisonOperator != -> ==
   * Goal 25. Weak Mutation 26: tp2.Server.removeBan(Ltp2/IP;)Z:132 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Server server0 = new Server();
      boolean boolean0 = server0.removeBan((IP) null);
      assertFalse(boolean0);
  }

  //Test case number: 19
  /*
   * 49 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true
   * Goal 3. tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true
   * Goal 4. tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - true
   * Goal 5. tp2.Server.removeBan(Ltp2/IP;)Z: I6 Branch 8 IFNE L131 - true
   * Goal 6. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 7. Branch tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 8. Branch tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 9. Branch tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 10. Branch tp2.Server.removeBan(Ltp2/IP;)Z: I6 Branch 8 IFNE L131 - true in context: tp2.Server:removeBan(Ltp2/IP;)Z
   * Goal 11. [Output]: tp2.Server.addBan(Ltp2/IP;)Z:True
   * Goal 12. [Output]: tp2.Server.removeBan(Ltp2/IP;)Z:True
   * Goal 13. tp2.Server.<init>()V: Line 31
   * Goal 14. tp2.Server.<init>()V: Line 58
   * Goal 15. tp2.Server.<init>()V: Line 59
   * Goal 16. tp2.Server.<init>()V: Line 60
   * Goal 17. tp2.Server.<init>()V: Line 61
   * Goal 18. tp2.Server.<init>()V: Line 62
   * Goal 19. tp2.Server.addBan(Ltp2/IP;)Z: Line 106
   * Goal 20. tp2.Server.addBan(Ltp2/IP;)Z: Line 109
   * Goal 21. tp2.Server.addBan(Ltp2/IP;)Z: Line 114
   * Goal 22. tp2.Server.addBan(Ltp2/IP;)Z: Line 118
   * Goal 23. tp2.Server.addBan(Ltp2/IP;)Z: Line 119
   * Goal 24. tp2.Server.addBan(Ltp2/IP;)Z: Line 124
   * Goal 25. tp2.Server.removeBan(Ltp2/IP;)Z: Line 131
   * Goal 26. tp2.Server.removeBan(Ltp2/IP;)Z: Line 136
   * Goal 27. tp2.Server.removeBan(Ltp2/IP;)Z: Line 138
   * Goal 28. [METHOD] tp2.Server.<init>()V
   * Goal 29. [METHOD] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 30. [METHOD] tp2.Server.removeBan(Ltp2/IP;)Z
   * Goal 31. [METHODNOEX] tp2.Server.<init>()V
   * Goal 32. [METHODNOEX] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 33. [METHODNOEX] tp2.Server.removeBan(Ltp2/IP;)Z
   * Goal 34. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 35. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 36. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 37. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 38. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 39. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 40. Weak Mutation 14: tp2.Server.addBan(Ltp2/IP;)Z:106 - ReplaceComparisonOperator != null -> = null
   * Goal 41. Weak Mutation 16: tp2.Server.addBan(Ltp2/IP;)Z:109 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 18: tp2.Server.addBan(Ltp2/IP;)Z:114 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 20: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> %
   * Goal 44. Weak Mutation 21: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> -
   * Goal 45. Weak Mutation 22: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> *
   * Goal 46. Weak Mutation 23: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> /
   * Goal 47. Weak Mutation 24: tp2.Server.addBan(Ltp2/IP;)Z:124 - ReplaceConstant - 1 -> 0
   * Goal 48. Weak Mutation 25: tp2.Server.removeBan(Ltp2/IP;)Z:131 - ReplaceComparisonOperator != -> ==
   * Goal 49. Weak Mutation 27: tp2.Server.removeBan(Ltp2/IP;)Z:138 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Server server0 = new Server();
      Integer integer0 = new Integer(0);
      IP iP0 = new IP(integer0, integer0, integer0, integer0);
      boolean boolean0 = server0.addBan(iP0);
      assertTrue(boolean0);
      
      boolean boolean1 = server0.removeBan(iP0);
      assertTrue(boolean1);
  }

  //Test case number: 20
  /*
   * 44 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true
   * Goal 3. tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true
   * Goal 4. tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - false
   * Goal 5. tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - true
   * Goal 6. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 7. Branch tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 8. Branch tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 9. Branch tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - false in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 10. Branch tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 11. [Output]: tp2.Server.addBan(Ltp2/IP;)Z:False
   * Goal 12. [Output]: tp2.Server.addBan(Ltp2/IP;)Z:True
   * Goal 13. tp2.Server.<init>()V: Line 31
   * Goal 14. tp2.Server.<init>()V: Line 58
   * Goal 15. tp2.Server.<init>()V: Line 59
   * Goal 16. tp2.Server.<init>()V: Line 60
   * Goal 17. tp2.Server.<init>()V: Line 61
   * Goal 18. tp2.Server.<init>()V: Line 62
   * Goal 19. tp2.Server.addBan(Ltp2/IP;)Z: Line 106
   * Goal 20. tp2.Server.addBan(Ltp2/IP;)Z: Line 109
   * Goal 21. tp2.Server.addBan(Ltp2/IP;)Z: Line 110
   * Goal 22. tp2.Server.addBan(Ltp2/IP;)Z: Line 114
   * Goal 23. tp2.Server.addBan(Ltp2/IP;)Z: Line 118
   * Goal 24. tp2.Server.addBan(Ltp2/IP;)Z: Line 119
   * Goal 25. tp2.Server.addBan(Ltp2/IP;)Z: Line 124
   * Goal 26. [METHOD] tp2.Server.<init>()V
   * Goal 27. [METHOD] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 28. [METHODNOEX] tp2.Server.<init>()V
   * Goal 29. [METHODNOEX] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 30. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 31. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 32. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 33. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 34. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 35. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 36. Weak Mutation 14: tp2.Server.addBan(Ltp2/IP;)Z:106 - ReplaceComparisonOperator != null -> = null
   * Goal 37. Weak Mutation 16: tp2.Server.addBan(Ltp2/IP;)Z:109 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 17: tp2.Server.addBan(Ltp2/IP;)Z:110 - ReplaceConstant - 0 -> 1
   * Goal 39. Weak Mutation 18: tp2.Server.addBan(Ltp2/IP;)Z:114 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 20: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> %
   * Goal 41. Weak Mutation 21: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> -
   * Goal 42. Weak Mutation 22: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> *
   * Goal 43. Weak Mutation 23: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> /
   * Goal 44. Weak Mutation 24: tp2.Server.addBan(Ltp2/IP;)Z:124 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Server server0 = new Server();
      Integer integer0 = new Integer(0);
      IP iP0 = new IP(integer0, integer0, integer0, integer0);
      boolean boolean0 = server0.addBan(iP0);
      boolean boolean1 = server0.addBan(iP0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  //Test case number: 21
  /*
   * 25 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - false
   * Goal 3. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 4. Branch tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - false in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 5. [Output]: tp2.Server.addBan(Ltp2/IP;)Z:False
   * Goal 6. tp2.Server.<init>()V: Line 31
   * Goal 7. tp2.Server.<init>()V: Line 58
   * Goal 8. tp2.Server.<init>()V: Line 59
   * Goal 9. tp2.Server.<init>()V: Line 60
   * Goal 10. tp2.Server.<init>()V: Line 61
   * Goal 11. tp2.Server.<init>()V: Line 62
   * Goal 12. tp2.Server.addBan(Ltp2/IP;)Z: Line 106
   * Goal 13. tp2.Server.addBan(Ltp2/IP;)Z: Line 107
   * Goal 14. [METHOD] tp2.Server.<init>()V
   * Goal 15. [METHOD] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 16. [METHODNOEX] tp2.Server.<init>()V
   * Goal 17. [METHODNOEX] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 18. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 19. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 20. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 21. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 22. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 23. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 24. Weak Mutation 14: tp2.Server.addBan(Ltp2/IP;)Z:106 - ReplaceComparisonOperator != null -> = null
   * Goal 25. Weak Mutation 15: tp2.Server.addBan(Ltp2/IP;)Z:107 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Server server0 = new Server();
      boolean boolean0 = server0.addBan((IP) null);
      assertFalse(boolean0);
  }

  //Test case number: 22
  /*
   * 35 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.addException(Ltp2/IP;)Z: I3 Branch 3 IFNULL L82 - false
   * Goal 3. tp2.Server.addException(Ltp2/IP;)Z: I8 Branch 4 IFEQ L82 - true
   * Goal 4. tp2.Server.addException(Ltp2/IP;)Z: I8 Branch 4 IFEQ L82 - false
   * Goal 5. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 6. Branch tp2.Server.addException(Ltp2/IP;)Z: I8 Branch 4 IFEQ L82 - false in context: tp2.Server:addException(Ltp2/IP;)Z
   * Goal 7. Branch tp2.Server.addException(Ltp2/IP;)Z: I8 Branch 4 IFEQ L82 - true in context: tp2.Server:addException(Ltp2/IP;)Z
   * Goal 8. Branch tp2.Server.addException(Ltp2/IP;)Z: I3 Branch 3 IFNULL L82 - false in context: tp2.Server:addException(Ltp2/IP;)Z
   * Goal 9. [Output]: tp2.Server.addException(Ltp2/IP;)Z:False
   * Goal 10. [Output]: tp2.Server.addException(Ltp2/IP;)Z:True
   * Goal 11. tp2.Server.<init>()V: Line 31
   * Goal 12. tp2.Server.<init>()V: Line 58
   * Goal 13. tp2.Server.<init>()V: Line 59
   * Goal 14. tp2.Server.<init>()V: Line 60
   * Goal 15. tp2.Server.<init>()V: Line 61
   * Goal 16. tp2.Server.<init>()V: Line 62
   * Goal 17. tp2.Server.addException(Ltp2/IP;)Z: Line 82
   * Goal 18. tp2.Server.addException(Ltp2/IP;)Z: Line 83
   * Goal 19. tp2.Server.addException(Ltp2/IP;)Z: Line 86
   * Goal 20. tp2.Server.addException(Ltp2/IP;)Z: Line 87
   * Goal 21. tp2.Server.addException(Ltp2/IP;)Z: Line 88
   * Goal 22. [METHOD] tp2.Server.<init>()V
   * Goal 23. [METHOD] tp2.Server.addException(Ltp2/IP;)Z
   * Goal 24. [METHODNOEX] tp2.Server.<init>()V
   * Goal 25. [METHODNOEX] tp2.Server.addException(Ltp2/IP;)Z
   * Goal 26. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 27. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 28. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 29. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 30. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 31. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 32. Weak Mutation 10: tp2.Server.addException(Ltp2/IP;)Z:82 - ReplaceComparisonOperator = null -> != null
   * Goal 33. Weak Mutation 11: tp2.Server.addException(Ltp2/IP;)Z:82 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 12: tp2.Server.addException(Ltp2/IP;)Z:83 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 13: tp2.Server.addException(Ltp2/IP;)Z:88 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Server server0 = new Server();
      IP iP0 = new IP((Integer) 0, (Integer) 0, (Integer) 0, (Integer) 0);
      boolean boolean0 = server0.addException(iP0);
      boolean boolean1 = server0.addException(iP0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  //Test case number: 23
  /*
   * 47 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.addException(Ltp2/IP;)Z: I3 Branch 3 IFNULL L82 - false
   * Goal 3. tp2.Server.addException(Ltp2/IP;)Z: I8 Branch 4 IFEQ L82 - true
   * Goal 4. tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true
   * Goal 5. tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true
   * Goal 6. tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - false
   * Goal 7. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 8. Branch tp2.Server.addException(Ltp2/IP;)Z: I8 Branch 4 IFEQ L82 - true in context: tp2.Server:addException(Ltp2/IP;)Z
   * Goal 9. Branch tp2.Server.addException(Ltp2/IP;)Z: I3 Branch 3 IFNULL L82 - false in context: tp2.Server:addException(Ltp2/IP;)Z
   * Goal 10. Branch tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 11. Branch tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 12. Branch tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - false in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 13. [Output]: tp2.Server.addBan(Ltp2/IP;)Z:False
   * Goal 14. [Output]: tp2.Server.addException(Ltp2/IP;)Z:True
   * Goal 15. tp2.Server.<init>()V: Line 31
   * Goal 16. tp2.Server.<init>()V: Line 58
   * Goal 17. tp2.Server.<init>()V: Line 59
   * Goal 18. tp2.Server.<init>()V: Line 60
   * Goal 19. tp2.Server.<init>()V: Line 61
   * Goal 20. tp2.Server.<init>()V: Line 62
   * Goal 21. tp2.Server.addBan(Ltp2/IP;)Z: Line 106
   * Goal 22. tp2.Server.addBan(Ltp2/IP;)Z: Line 109
   * Goal 23. tp2.Server.addBan(Ltp2/IP;)Z: Line 114
   * Goal 24. tp2.Server.addBan(Ltp2/IP;)Z: Line 115
   * Goal 25. tp2.Server.addException(Ltp2/IP;)Z: Line 82
   * Goal 26. tp2.Server.addException(Ltp2/IP;)Z: Line 86
   * Goal 27. tp2.Server.addException(Ltp2/IP;)Z: Line 87
   * Goal 28. tp2.Server.addException(Ltp2/IP;)Z: Line 88
   * Goal 29. [METHOD] tp2.Server.<init>()V
   * Goal 30. [METHOD] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 31. [METHOD] tp2.Server.addException(Ltp2/IP;)Z
   * Goal 32. [METHODNOEX] tp2.Server.<init>()V
   * Goal 33. [METHODNOEX] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 34. [METHODNOEX] tp2.Server.addException(Ltp2/IP;)Z
   * Goal 35. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 36. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 37. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 38. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 39. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 40. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 41. Weak Mutation 10: tp2.Server.addException(Ltp2/IP;)Z:82 - ReplaceComparisonOperator = null -> != null
   * Goal 42. Weak Mutation 11: tp2.Server.addException(Ltp2/IP;)Z:82 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 13: tp2.Server.addException(Ltp2/IP;)Z:88 - ReplaceConstant - 1 -> 0
   * Goal 44. Weak Mutation 14: tp2.Server.addBan(Ltp2/IP;)Z:106 - ReplaceComparisonOperator != null -> = null
   * Goal 45. Weak Mutation 16: tp2.Server.addBan(Ltp2/IP;)Z:109 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 18: tp2.Server.addBan(Ltp2/IP;)Z:114 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 19: tp2.Server.addBan(Ltp2/IP;)Z:115 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Server server0 = new Server();
      Integer integer0 = new Integer((-244));
      IP iP0 = new IP(integer0, integer0, integer0, integer0);
      boolean boolean0 = server0.addException(iP0);
      assertTrue(boolean0);
      
      boolean boolean1 = server0.addBan(iP0);
      assertFalse(boolean1);
  }

  //Test case number: 24
  /*
   * 25 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.addException(Ltp2/IP;)Z: I3 Branch 3 IFNULL L82 - true
   * Goal 3. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 4. Branch tp2.Server.addException(Ltp2/IP;)Z: I3 Branch 3 IFNULL L82 - true in context: tp2.Server:addException(Ltp2/IP;)Z
   * Goal 5. [Output]: tp2.Server.addException(Ltp2/IP;)Z:False
   * Goal 6. tp2.Server.<init>()V: Line 31
   * Goal 7. tp2.Server.<init>()V: Line 58
   * Goal 8. tp2.Server.<init>()V: Line 59
   * Goal 9. tp2.Server.<init>()V: Line 60
   * Goal 10. tp2.Server.<init>()V: Line 61
   * Goal 11. tp2.Server.<init>()V: Line 62
   * Goal 12. tp2.Server.addException(Ltp2/IP;)Z: Line 82
   * Goal 13. tp2.Server.addException(Ltp2/IP;)Z: Line 83
   * Goal 14. [METHOD] tp2.Server.<init>()V
   * Goal 15. [METHOD] tp2.Server.addException(Ltp2/IP;)Z
   * Goal 16. [METHODNOEX] tp2.Server.<init>()V
   * Goal 17. [METHODNOEX] tp2.Server.addException(Ltp2/IP;)Z
   * Goal 18. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 19. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 20. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 21. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 22. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 23. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 24. Weak Mutation 10: tp2.Server.addException(Ltp2/IP;)Z:82 - ReplaceComparisonOperator = null -> != null
   * Goal 25. Weak Mutation 12: tp2.Server.addException(Ltp2/IP;)Z:83 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Server server0 = new Server();
      boolean boolean0 = server0.addException((IP) null);
      assertFalse(boolean0);
  }

  //Test case number: 25
  /*
   * 51 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.connect(Ltp2/IP;)Z: I3 Branch 1 IFNULL L70 - false
   * Goal 3. tp2.Server.connect(Ltp2/IP;)Z: I8 Branch 2 IFEQ L70 - false
   * Goal 4. tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true
   * Goal 5. tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true
   * Goal 6. tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - true
   * Goal 7. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 8. Branch tp2.Server.connect(Ltp2/IP;)Z: I3 Branch 1 IFNULL L70 - false in context: tp2.Server:connect(Ltp2/IP;)Z
   * Goal 9. Branch tp2.Server.connect(Ltp2/IP;)Z: I8 Branch 2 IFEQ L70 - false in context: tp2.Server:connect(Ltp2/IP;)Z
   * Goal 10. Branch tp2.Server.addBan(Ltp2/IP;)Z: I3 Branch 5 IFNONNULL L106 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 11. Branch tp2.Server.addBan(Ltp2/IP;)Z: I14 Branch 6 IFEQ L109 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 12. Branch tp2.Server.addBan(Ltp2/IP;)Z: I25 Branch 7 IFEQ L114 - true in context: tp2.Server:addBan(Ltp2/IP;)Z
   * Goal 13. [Output]: tp2.Server.addBan(Ltp2/IP;)Z:True
   * Goal 14. [Output]: tp2.Server.connect(Ltp2/IP;)Z:False
   * Goal 15. tp2.Server.<init>()V: Line 31
   * Goal 16. tp2.Server.<init>()V: Line 58
   * Goal 17. tp2.Server.<init>()V: Line 59
   * Goal 18. tp2.Server.<init>()V: Line 60
   * Goal 19. tp2.Server.<init>()V: Line 61
   * Goal 20. tp2.Server.<init>()V: Line 62
   * Goal 21. tp2.Server.addBan(Ltp2/IP;)Z: Line 106
   * Goal 22. tp2.Server.addBan(Ltp2/IP;)Z: Line 109
   * Goal 23. tp2.Server.addBan(Ltp2/IP;)Z: Line 114
   * Goal 24. tp2.Server.addBan(Ltp2/IP;)Z: Line 118
   * Goal 25. tp2.Server.addBan(Ltp2/IP;)Z: Line 119
   * Goal 26. tp2.Server.addBan(Ltp2/IP;)Z: Line 124
   * Goal 27. tp2.Server.connect(Ltp2/IP;)Z: Line 70
   * Goal 28. tp2.Server.connect(Ltp2/IP;)Z: Line 71
   * Goal 29. [METHOD] tp2.Server.<init>()V
   * Goal 30. [METHOD] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 31. [METHOD] tp2.Server.connect(Ltp2/IP;)Z
   * Goal 32. [METHODNOEX] tp2.Server.<init>()V
   * Goal 33. [METHODNOEX] tp2.Server.addBan(Ltp2/IP;)Z
   * Goal 34. [METHODNOEX] tp2.Server.connect(Ltp2/IP;)Z
   * Goal 35. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 36. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 37. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 38. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 39. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 40. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 41. Weak Mutation 6: tp2.Server.connect(Ltp2/IP;)Z:70 - ReplaceComparisonOperator = null -> != null
   * Goal 42. Weak Mutation 7: tp2.Server.connect(Ltp2/IP;)Z:70 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 8: tp2.Server.connect(Ltp2/IP;)Z:71 - ReplaceConstant - 0 -> 1
   * Goal 44. Weak Mutation 14: tp2.Server.addBan(Ltp2/IP;)Z:106 - ReplaceComparisonOperator != null -> = null
   * Goal 45. Weak Mutation 16: tp2.Server.addBan(Ltp2/IP;)Z:109 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 18: tp2.Server.addBan(Ltp2/IP;)Z:114 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 20: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> %
   * Goal 48. Weak Mutation 21: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> -
   * Goal 49. Weak Mutation 22: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> *
   * Goal 50. Weak Mutation 23: tp2.Server.addBan(Ltp2/IP;)Z:118 - ReplaceArithmeticOperator + -> /
   * Goal 51. Weak Mutation 24: tp2.Server.addBan(Ltp2/IP;)Z:124 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Server server0 = new Server();
      Integer integer0 = new Integer((-244));
      IP iP0 = new IP(integer0, integer0, integer0, integer0);
      boolean boolean0 = server0.addBan(iP0);
      assertTrue(boolean0);
      
      boolean boolean1 = server0.connect(iP0);
      assertFalse(boolean1);
  }

  //Test case number: 26
  /*
   * 28 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.connect(Ltp2/IP;)Z: I3 Branch 1 IFNULL L70 - false
   * Goal 3. tp2.Server.connect(Ltp2/IP;)Z: I8 Branch 2 IFEQ L70 - true
   * Goal 4. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 5. Branch tp2.Server.connect(Ltp2/IP;)Z: I3 Branch 1 IFNULL L70 - false in context: tp2.Server:connect(Ltp2/IP;)Z
   * Goal 6. Branch tp2.Server.connect(Ltp2/IP;)Z: I8 Branch 2 IFEQ L70 - true in context: tp2.Server:connect(Ltp2/IP;)Z
   * Goal 7. [Output]: tp2.Server.connect(Ltp2/IP;)Z:True
   * Goal 8. tp2.Server.<init>()V: Line 31
   * Goal 9. tp2.Server.<init>()V: Line 58
   * Goal 10. tp2.Server.<init>()V: Line 59
   * Goal 11. tp2.Server.<init>()V: Line 60
   * Goal 12. tp2.Server.<init>()V: Line 61
   * Goal 13. tp2.Server.<init>()V: Line 62
   * Goal 14. tp2.Server.connect(Ltp2/IP;)Z: Line 70
   * Goal 15. tp2.Server.connect(Ltp2/IP;)Z: Line 73
   * Goal 16. [METHOD] tp2.Server.<init>()V
   * Goal 17. [METHOD] tp2.Server.connect(Ltp2/IP;)Z
   * Goal 18. [METHODNOEX] tp2.Server.<init>()V
   * Goal 19. [METHODNOEX] tp2.Server.connect(Ltp2/IP;)Z
   * Goal 20. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 21. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 22. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 23. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 24. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 25. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 26. Weak Mutation 6: tp2.Server.connect(Ltp2/IP;)Z:70 - ReplaceComparisonOperator = null -> != null
   * Goal 27. Weak Mutation 7: tp2.Server.connect(Ltp2/IP;)Z:70 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 9: tp2.Server.connect(Ltp2/IP;)Z:73 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Server server0 = new Server();
      Integer integer0 = new Integer((-244));
      IP iP0 = new IP(integer0, integer0, integer0, integer0);
      boolean boolean0 = server0.connect(iP0);
      assertTrue(boolean0);
  }

  //Test case number: 27
  /*
   * 25 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.connect(Ltp2/IP;)Z: I3 Branch 1 IFNULL L70 - true
   * Goal 3. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 4. Branch tp2.Server.connect(Ltp2/IP;)Z: I3 Branch 1 IFNULL L70 - true in context: tp2.Server:connect(Ltp2/IP;)Z
   * Goal 5. [Output]: tp2.Server.connect(Ltp2/IP;)Z:False
   * Goal 6. tp2.Server.<init>()V: Line 31
   * Goal 7. tp2.Server.<init>()V: Line 58
   * Goal 8. tp2.Server.<init>()V: Line 59
   * Goal 9. tp2.Server.<init>()V: Line 60
   * Goal 10. tp2.Server.<init>()V: Line 61
   * Goal 11. tp2.Server.<init>()V: Line 62
   * Goal 12. tp2.Server.connect(Ltp2/IP;)Z: Line 70
   * Goal 13. tp2.Server.connect(Ltp2/IP;)Z: Line 71
   * Goal 14. [METHOD] tp2.Server.<init>()V
   * Goal 15. [METHOD] tp2.Server.connect(Ltp2/IP;)Z
   * Goal 16. [METHODNOEX] tp2.Server.<init>()V
   * Goal 17. [METHODNOEX] tp2.Server.connect(Ltp2/IP;)Z
   * Goal 18. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 19. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 20. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 21. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 22. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 23. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 24. Weak Mutation 6: tp2.Server.connect(Ltp2/IP;)Z:70 - ReplaceComparisonOperator = null -> != null
   * Goal 25. Weak Mutation 8: tp2.Server.connect(Ltp2/IP;)Z:71 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Server server0 = new Server();
      boolean boolean0 = server0.connect((IP) null);
      assertFalse(boolean0);
  }

  //Test case number: 28
  /*
   * 22 covered goals:
   * Goal 1. tp2.Server.<init>()V: root-Branch
   * Goal 2. tp2.Server.removeException(Ltp2/IP;)Z: root-Branch
   * Goal 3. Branch tp2.Server.removeException(Ltp2/IP;)Z: root-Branch in context: tp2.Server:removeException(Ltp2/IP;)Z
   * Goal 4. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 5. [Output]: tp2.Server.removeException(Ltp2/IP;)Z:False
   * Goal 6. tp2.Server.<init>()V: Line 31
   * Goal 7. tp2.Server.<init>()V: Line 58
   * Goal 8. tp2.Server.<init>()V: Line 59
   * Goal 9. tp2.Server.<init>()V: Line 60
   * Goal 10. tp2.Server.<init>()V: Line 61
   * Goal 11. tp2.Server.<init>()V: Line 62
   * Goal 12. tp2.Server.removeException(Ltp2/IP;)Z: Line 97
   * Goal 13. [METHOD] tp2.Server.<init>()V
   * Goal 14. [METHOD] tp2.Server.removeException(Ltp2/IP;)Z
   * Goal 15. [METHODNOEX] tp2.Server.<init>()V
   * Goal 16. [METHODNOEX] tp2.Server.removeException(Ltp2/IP;)Z
   * Goal 17. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 18. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 19. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 20. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 21. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 22. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   */

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Server server0 = new Server();
      Integer integer0 = new Integer((-244));
      IP iP0 = new IP(integer0, integer0, integer0, integer0);
      boolean boolean0 = server0.removeException(iP0);
      assertFalse(boolean0);
  }

  //Test case number: 29
  /*
   * 336 covered goals:
   * Goal 1. tp2.Server.fixedLongList()Ljava/util/List;: root-Branch
   * Goal 2. tp2.Server.fixedIPList()Ljava/util/List;: root-Branch
   * Goal 3. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: I121 Branch 19 IF_ICMPLT L251 - false
   * Goal 4. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: I175 Branch 20 IF_ICMPLT L262 - true
   * Goal 5. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: I175 Branch 20 IF_ICMPLT L262 - false
   * Goal 6. Branch tp2.Server.fixedLongList()Ljava/util/List;: root-Branch in context: 
   * Goal 7. Branch tp2.Server.fixedIPList()Ljava/util/List;: root-Branch in context: 
   * Goal 8. Branch tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: I121 Branch 19 IF_ICMPLT L251 - false in context: tp2.Server:finServer(I)Lkorat/finitization/IFinitization;
   * Goal 9. Branch tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: I175 Branch 20 IF_ICMPLT L262 - false in context: tp2.Server:finServer(I)Lkorat/finitization/IFinitization;
   * Goal 10. Branch tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: I175 Branch 20 IF_ICMPLT L262 - true in context: tp2.Server:finServer(I)Lkorat/finitization/IFinitization;
   * Goal 11. [Output]: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:NonNull:korat.finitization.IFinitization:areArraysHandledAsObjects()Z:False
   * Goal 12. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 229
   * Goal 13. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 231
   * Goal 14. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 232
   * Goal 15. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 235
   * Goal 16. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 236
   * Goal 17. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 237
   * Goal 18. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 240
   * Goal 19. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 241
   * Goal 20. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 243
   * Goal 21. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 244
   * Goal 22. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 247
   * Goal 23. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 248
   * Goal 24. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 249
   * Goal 25. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 250
   * Goal 26. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 251
   * Goal 27. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 254
   * Goal 28. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 256
   * Goal 29. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 258
   * Goal 30. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 259
   * Goal 31. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 260
   * Goal 32. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 261
   * Goal 33. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 262
   * Goal 34. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 263
   * Goal 35. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 265
   * Goal 36. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 268
   * Goal 37. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 269
   * Goal 38. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 272
   * Goal 39. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 274
   * Goal 40. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 275
   * Goal 41. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 276
   * Goal 42. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 278
   * Goal 43. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 280
   * Goal 44. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 281
   * Goal 45. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 282
   * Goal 46. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 283
   * Goal 47. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 285
   * Goal 48. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 286
   * Goal 49. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 287
   * Goal 50. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 289
   * Goal 51. tp2.Server.finServer(I)Lkorat/finitization/IFinitization;: Line 291
   * Goal 52. tp2.Server.fixedIPList()Ljava/util/List;: Line 175
   * Goal 53. tp2.Server.fixedIPList()Ljava/util/List;: Line 176
   * Goal 54. tp2.Server.fixedIPList()Ljava/util/List;: Line 177
   * Goal 55. tp2.Server.fixedIPList()Ljava/util/List;: Line 178
   * Goal 56. tp2.Server.fixedIPList()Ljava/util/List;: Line 179
   * Goal 57. tp2.Server.fixedIPList()Ljava/util/List;: Line 180
   * Goal 58. tp2.Server.fixedIPList()Ljava/util/List;: Line 181
   * Goal 59. tp2.Server.fixedIPList()Ljava/util/List;: Line 182
   * Goal 60. tp2.Server.fixedIPList()Ljava/util/List;: Line 183
   * Goal 61. tp2.Server.fixedIPList()Ljava/util/List;: Line 184
   * Goal 62. tp2.Server.fixedIPList()Ljava/util/List;: Line 185
   * Goal 63. tp2.Server.fixedIPList()Ljava/util/List;: Line 186
   * Goal 64. tp2.Server.fixedIPList()Ljava/util/List;: Line 187
   * Goal 65. tp2.Server.fixedIPList()Ljava/util/List;: Line 188
   * Goal 66. tp2.Server.fixedIPList()Ljava/util/List;: Line 189
   * Goal 67. tp2.Server.fixedIPList()Ljava/util/List;: Line 190
   * Goal 68. tp2.Server.fixedIPList()Ljava/util/List;: Line 191
   * Goal 69. tp2.Server.fixedIPList()Ljava/util/List;: Line 192
   * Goal 70. tp2.Server.fixedIPList()Ljava/util/List;: Line 193
   * Goal 71. tp2.Server.fixedIPList()Ljava/util/List;: Line 194
   * Goal 72. tp2.Server.fixedIPList()Ljava/util/List;: Line 195
   * Goal 73. tp2.Server.fixedIPList()Ljava/util/List;: Line 196
   * Goal 74. tp2.Server.fixedLongList()Ljava/util/List;: Line 201
   * Goal 75. tp2.Server.fixedLongList()Ljava/util/List;: Line 202
   * Goal 76. tp2.Server.fixedLongList()Ljava/util/List;: Line 203
   * Goal 77. tp2.Server.fixedLongList()Ljava/util/List;: Line 204
   * Goal 78. tp2.Server.fixedLongList()Ljava/util/List;: Line 205
   * Goal 79. tp2.Server.fixedLongList()Ljava/util/List;: Line 206
   * Goal 80. tp2.Server.fixedLongList()Ljava/util/List;: Line 207
   * Goal 81. tp2.Server.fixedLongList()Ljava/util/List;: Line 208
   * Goal 82. tp2.Server.fixedLongList()Ljava/util/List;: Line 209
   * Goal 83. tp2.Server.fixedLongList()Ljava/util/List;: Line 210
   * Goal 84. tp2.Server.fixedLongList()Ljava/util/List;: Line 211
   * Goal 85. tp2.Server.fixedLongList()Ljava/util/List;: Line 212
   * Goal 86. tp2.Server.fixedLongList()Ljava/util/List;: Line 213
   * Goal 87. tp2.Server.fixedLongList()Ljava/util/List;: Line 214
   * Goal 88. tp2.Server.fixedLongList()Ljava/util/List;: Line 215
   * Goal 89. tp2.Server.fixedLongList()Ljava/util/List;: Line 216
   * Goal 90. tp2.Server.fixedLongList()Ljava/util/List;: Line 217
   * Goal 91. tp2.Server.fixedLongList()Ljava/util/List;: Line 218
   * Goal 92. tp2.Server.fixedLongList()Ljava/util/List;: Line 219
   * Goal 93. tp2.Server.fixedLongList()Ljava/util/List;: Line 220
   * Goal 94. tp2.Server.fixedLongList()Ljava/util/List;: Line 221
   * Goal 95. tp2.Server.fixedLongList()Ljava/util/List;: Line 222
   * Goal 96. [METHOD] tp2.Server.finServer(I)Lkorat/finitization/IFinitization;
   * Goal 97. [METHODNOEX] tp2.Server.finServer(I)Lkorat/finitization/IFinitization;
   * Goal 98. Weak Mutation 58: tp2.Server.fixedIPList()Ljava/util/List;:175 - ReplaceConstant - 20 -> 0
   * Goal 99. Weak Mutation 59: tp2.Server.fixedIPList()Ljava/util/List;:175 - ReplaceConstant - 20 -> 1
   * Goal 100. Weak Mutation 60: tp2.Server.fixedIPList()Ljava/util/List;:175 - ReplaceConstant - 20 -> -1
   * Goal 101. Weak Mutation 61: tp2.Server.fixedIPList()Ljava/util/List;:175 - ReplaceConstant - 20 -> 19
   * Goal 102. Weak Mutation 62: tp2.Server.fixedIPList()Ljava/util/List;:175 - ReplaceConstant - 20 -> 21
   * Goal 103. Weak Mutation 63: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 102 -> 0
   * Goal 104. Weak Mutation 64: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 102 -> 1
   * Goal 105. Weak Mutation 65: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 102 -> -1
   * Goal 106. Weak Mutation 66: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 102 -> 101
   * Goal 107. Weak Mutation 67: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 102 -> 103
   * Goal 108. Weak Mutation 68: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 103 -> 0
   * Goal 109. Weak Mutation 69: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 103 -> 1
   * Goal 110. Weak Mutation 70: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 103 -> -1
   * Goal 111. Weak Mutation 71: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 103 -> 102
   * Goal 112. Weak Mutation 72: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 103 -> 104
   * Goal 113. Weak Mutation 73: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 254 -> 0
   * Goal 114. Weak Mutation 74: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 254 -> 1
   * Goal 115. Weak Mutation 75: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 254 -> -1
   * Goal 116. Weak Mutation 76: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 254 -> 253
   * Goal 117. Weak Mutation 77: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 254 -> 255
   * Goal 118. Weak Mutation 78: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 98 -> 0
   * Goal 119. Weak Mutation 79: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 98 -> 1
   * Goal 120. Weak Mutation 80: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 98 -> -1
   * Goal 121. Weak Mutation 81: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 98 -> 97
   * Goal 122. Weak Mutation 82: tp2.Server.fixedIPList()Ljava/util/List;:176 - ReplaceConstant - 98 -> 99
   * Goal 123. Weak Mutation 83: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 102 -> 0
   * Goal 124. Weak Mutation 84: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 102 -> 1
   * Goal 125. Weak Mutation 85: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 102 -> -1
   * Goal 126. Weak Mutation 86: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 102 -> 101
   * Goal 127. Weak Mutation 87: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 102 -> 103
   * Goal 128. Weak Mutation 88: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 152 -> 0
   * Goal 129. Weak Mutation 89: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 152 -> 1
   * Goal 130. Weak Mutation 90: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 152 -> -1
   * Goal 131. Weak Mutation 91: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 152 -> 151
   * Goal 132. Weak Mutation 92: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 152 -> 153
   * Goal 133. Weak Mutation 93: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 254 -> 0
   * Goal 134. Weak Mutation 94: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 254 -> 1
   * Goal 135. Weak Mutation 95: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 254 -> -1
   * Goal 136. Weak Mutation 96: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 254 -> 253
   * Goal 137. Weak Mutation 97: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 254 -> 255
   * Goal 138. Weak Mutation 98: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 98 -> 0
   * Goal 139. Weak Mutation 99: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 98 -> 1
   * Goal 140. Weak Mutation 100: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 98 -> -1
   * Goal 141. Weak Mutation 101: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 98 -> 97
   * Goal 142. Weak Mutation 102: tp2.Server.fixedIPList()Ljava/util/List;:177 - ReplaceConstant - 98 -> 99
   * Goal 143. Weak Mutation 103: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 102 -> 0
   * Goal 144. Weak Mutation 104: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 102 -> 1
   * Goal 145. Weak Mutation 105: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 102 -> -1
   * Goal 146. Weak Mutation 106: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 102 -> 101
   * Goal 147. Weak Mutation 107: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 102 -> 103
   * Goal 148. Weak Mutation 108: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 103 -> 0
   * Goal 149. Weak Mutation 109: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 103 -> 1
   * Goal 150. Weak Mutation 110: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 103 -> -1
   * Goal 151. Weak Mutation 111: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 103 -> 102
   * Goal 152. Weak Mutation 112: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 103 -> 104
   * Goal 153. Weak Mutation 113: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 233 -> 0
   * Goal 154. Weak Mutation 114: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 233 -> 1
   * Goal 155. Weak Mutation 115: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 233 -> -1
   * Goal 156. Weak Mutation 116: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 233 -> 232
   * Goal 157. Weak Mutation 117: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 233 -> 234
   * Goal 158. Weak Mutation 118: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 98 -> 0
   * Goal 159. Weak Mutation 119: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 98 -> 1
   * Goal 160. Weak Mutation 120: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 98 -> -1
   * Goal 161. Weak Mutation 121: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 98 -> 97
   * Goal 162. Weak Mutation 122: tp2.Server.fixedIPList()Ljava/util/List;:178 - ReplaceConstant - 98 -> 99
   * Goal 163. Weak Mutation 123: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 102 -> 0
   * Goal 164. Weak Mutation 124: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 102 -> 1
   * Goal 165. Weak Mutation 125: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 102 -> -1
   * Goal 166. Weak Mutation 126: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 102 -> 101
   * Goal 167. Weak Mutation 127: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 102 -> 103
   * Goal 168. Weak Mutation 128: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 103 -> 0
   * Goal 169. Weak Mutation 129: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 103 -> 1
   * Goal 170. Weak Mutation 130: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 103 -> -1
   * Goal 171. Weak Mutation 131: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 103 -> 102
   * Goal 172. Weak Mutation 132: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 103 -> 104
   * Goal 173. Weak Mutation 133: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 254 -> 0
   * Goal 174. Weak Mutation 134: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 254 -> 1
   * Goal 175. Weak Mutation 135: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 254 -> -1
   * Goal 176. Weak Mutation 136: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 254 -> 253
   * Goal 177. Weak Mutation 137: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 254 -> 255
   * Goal 178. Weak Mutation 138: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 5 -> 0
   * Goal 179. Weak Mutation 139: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 5 -> 1
   * Goal 180. Weak Mutation 140: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 5 -> -1
   * Goal 181. Weak Mutation 141: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 5 -> 4
   * Goal 182. Weak Mutation 142: tp2.Server.fixedIPList()Ljava/util/List;:179 - ReplaceConstant - 5 -> 6
   * Goal 183. Weak Mutation 143: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 1 -> 0
   * Goal 184. Weak Mutation 144: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 103 -> 0
   * Goal 185. Weak Mutation 145: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 103 -> 1
   * Goal 186. Weak Mutation 146: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 103 -> -1
   * Goal 187. Weak Mutation 147: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 103 -> 102
   * Goal 188. Weak Mutation 148: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 103 -> 104
   * Goal 189. Weak Mutation 149: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 254 -> 0
   * Goal 190. Weak Mutation 150: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 254 -> 1
   * Goal 191. Weak Mutation 151: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 254 -> -1
   * Goal 192. Weak Mutation 152: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 254 -> 253
   * Goal 193. Weak Mutation 153: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 254 -> 255
   * Goal 194. Weak Mutation 154: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 98 -> 0
   * Goal 195. Weak Mutation 155: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 98 -> 1
   * Goal 196. Weak Mutation 156: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 98 -> -1
   * Goal 197. Weak Mutation 157: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 98 -> 97
   * Goal 198. Weak Mutation 158: tp2.Server.fixedIPList()Ljava/util/List;:180 - ReplaceConstant - 98 -> 99
   * Goal 199. Weak Mutation 159: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 192 -> 0
   * Goal 200. Weak Mutation 160: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 192 -> 1
   * Goal 201. Weak Mutation 161: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 192 -> -1
   * Goal 202. Weak Mutation 162: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 192 -> 191
   * Goal 203. Weak Mutation 163: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 192 -> 193
   * Goal 204. Weak Mutation 164: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 168 -> 0
   * Goal 205. Weak Mutation 165: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 168 -> 1
   * Goal 206. Weak Mutation 166: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 168 -> -1
   * Goal 207. Weak Mutation 167: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 168 -> 167
   * Goal 208. Weak Mutation 168: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 168 -> 169
   * Goal 209. Weak Mutation 169: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 24 -> 0
   * Goal 210. Weak Mutation 170: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 24 -> 1
   * Goal 211. Weak Mutation 171: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 24 -> -1
   * Goal 212. Weak Mutation 172: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 24 -> 23
   * Goal 213. Weak Mutation 173: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 24 -> 25
   * Goal 214. Weak Mutation 174: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 98 -> 0
   * Goal 215. Weak Mutation 175: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 98 -> 1
   * Goal 216. Weak Mutation 176: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 98 -> -1
   * Goal 217. Weak Mutation 177: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 98 -> 97
   * Goal 218. Weak Mutation 178: tp2.Server.fixedIPList()Ljava/util/List;:181 - ReplaceConstant - 98 -> 99
   * Goal 219. Weak Mutation 179: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 192 -> 0
   * Goal 220. Weak Mutation 180: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 192 -> 1
   * Goal 221. Weak Mutation 181: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 192 -> -1
   * Goal 222. Weak Mutation 182: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 192 -> 191
   * Goal 223. Weak Mutation 183: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 192 -> 193
   * Goal 224. Weak Mutation 184: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 168 -> 0
   * Goal 225. Weak Mutation 185: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 168 -> 1
   * Goal 226. Weak Mutation 186: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 168 -> -1
   * Goal 227. Weak Mutation 187: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 168 -> 167
   * Goal 228. Weak Mutation 188: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 168 -> 169
   * Goal 229. Weak Mutation 189: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 12 -> 0
   * Goal 230. Weak Mutation 190: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 12 -> 1
   * Goal 231. Weak Mutation 191: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 12 -> -1
   * Goal 232. Weak Mutation 192: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 12 -> 11
   * Goal 233. Weak Mutation 193: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 12 -> 13
   * Goal 234. Weak Mutation 194: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 98 -> 0
   * Goal 235. Weak Mutation 195: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 98 -> 1
   * Goal 236. Weak Mutation 196: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 98 -> -1
   * Goal 237. Weak Mutation 197: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 98 -> 97
   * Goal 238. Weak Mutation 198: tp2.Server.fixedIPList()Ljava/util/List;:182 - ReplaceConstant - 98 -> 99
   * Goal 239. Weak Mutation 199: tp2.Server.fixedLongList()Ljava/util/List;:201 - ReplaceConstant - 20 -> 0
   * Goal 240. Weak Mutation 200: tp2.Server.fixedLongList()Ljava/util/List;:201 - ReplaceConstant - 20 -> 1
   * Goal 241. Weak Mutation 201: tp2.Server.fixedLongList()Ljava/util/List;:201 - ReplaceConstant - 20 -> -1
   * Goal 242. Weak Mutation 202: tp2.Server.fixedLongList()Ljava/util/List;:201 - ReplaceConstant - 20 -> 19
   * Goal 243. Weak Mutation 203: tp2.Server.fixedLongList()Ljava/util/List;:201 - ReplaceConstant - 20 -> 21
   * Goal 244. Weak Mutation 204: tp2.Server.fixedLongList()Ljava/util/List;:202 - ReplaceConstant - 100000 -> 0
   * Goal 245. Weak Mutation 205: tp2.Server.fixedLongList()Ljava/util/List;:202 - ReplaceConstant - 100000 -> 1
   * Goal 246. Weak Mutation 206: tp2.Server.fixedLongList()Ljava/util/List;:202 - ReplaceConstant - 100000 -> -1
   * Goal 247. Weak Mutation 207: tp2.Server.fixedLongList()Ljava/util/List;:202 - ReplaceConstant - 100000 -> 99999
   * Goal 248. Weak Mutation 208: tp2.Server.fixedLongList()Ljava/util/List;:202 - ReplaceConstant - 100000 -> 100001
   * Goal 249. Weak Mutation 209: tp2.Server.fixedLongList()Ljava/util/List;:203 - ReplaceConstant - 200000 -> 0
   * Goal 250. Weak Mutation 210: tp2.Server.fixedLongList()Ljava/util/List;:203 - ReplaceConstant - 200000 -> 1
   * Goal 251. Weak Mutation 211: tp2.Server.fixedLongList()Ljava/util/List;:203 - ReplaceConstant - 200000 -> -1
   * Goal 252. Weak Mutation 212: tp2.Server.fixedLongList()Ljava/util/List;:203 - ReplaceConstant - 200000 -> 199999
   * Goal 253. Weak Mutation 213: tp2.Server.fixedLongList()Ljava/util/List;:203 - ReplaceConstant - 200000 -> 200001
   * Goal 254. Weak Mutation 214: tp2.Server.fixedLongList()Ljava/util/List;:204 - ReplaceConstant - 300000 -> 0
   * Goal 255. Weak Mutation 215: tp2.Server.fixedLongList()Ljava/util/List;:204 - ReplaceConstant - 300000 -> 1
   * Goal 256. Weak Mutation 216: tp2.Server.fixedLongList()Ljava/util/List;:204 - ReplaceConstant - 300000 -> -1
   * Goal 257. Weak Mutation 217: tp2.Server.fixedLongList()Ljava/util/List;:204 - ReplaceConstant - 300000 -> 299999
   * Goal 258. Weak Mutation 218: tp2.Server.fixedLongList()Ljava/util/List;:204 - ReplaceConstant - 300000 -> 300001
   * Goal 259. Weak Mutation 219: tp2.Server.fixedLongList()Ljava/util/List;:205 - ReplaceConstant - 400000 -> 0
   * Goal 260. Weak Mutation 220: tp2.Server.fixedLongList()Ljava/util/List;:205 - ReplaceConstant - 400000 -> 1
   * Goal 261. Weak Mutation 221: tp2.Server.fixedLongList()Ljava/util/List;:205 - ReplaceConstant - 400000 -> -1
   * Goal 262. Weak Mutation 222: tp2.Server.fixedLongList()Ljava/util/List;:205 - ReplaceConstant - 400000 -> 399999
   * Goal 263. Weak Mutation 223: tp2.Server.fixedLongList()Ljava/util/List;:205 - ReplaceConstant - 400000 -> 400001
   * Goal 264. Weak Mutation 224: tp2.Server.fixedLongList()Ljava/util/List;:206 - ReplaceConstant - 500000 -> 0
   * Goal 265. Weak Mutation 225: tp2.Server.fixedLongList()Ljava/util/List;:206 - ReplaceConstant - 500000 -> 1
   * Goal 266. Weak Mutation 226: tp2.Server.fixedLongList()Ljava/util/List;:206 - ReplaceConstant - 500000 -> -1
   * Goal 267. Weak Mutation 227: tp2.Server.fixedLongList()Ljava/util/List;:206 - ReplaceConstant - 500000 -> 499999
   * Goal 268. Weak Mutation 228: tp2.Server.fixedLongList()Ljava/util/List;:206 - ReplaceConstant - 500000 -> 500001
   * Goal 269. Weak Mutation 229: tp2.Server.fixedLongList()Ljava/util/List;:207 - ReplaceConstant - 600000 -> 0
   * Goal 270. Weak Mutation 230: tp2.Server.fixedLongList()Ljava/util/List;:207 - ReplaceConstant - 600000 -> 1
   * Goal 271. Weak Mutation 231: tp2.Server.fixedLongList()Ljava/util/List;:207 - ReplaceConstant - 600000 -> -1
   * Goal 272. Weak Mutation 232: tp2.Server.fixedLongList()Ljava/util/List;:207 - ReplaceConstant - 600000 -> 599999
   * Goal 273. Weak Mutation 233: tp2.Server.fixedLongList()Ljava/util/List;:207 - ReplaceConstant - 600000 -> 600001
   * Goal 274. Weak Mutation 234: tp2.Server.fixedLongList()Ljava/util/List;:208 - ReplaceConstant - 700000 -> 0
   * Goal 275. Weak Mutation 235: tp2.Server.fixedLongList()Ljava/util/List;:208 - ReplaceConstant - 700000 -> 1
   * Goal 276. Weak Mutation 236: tp2.Server.fixedLongList()Ljava/util/List;:208 - ReplaceConstant - 700000 -> -1
   * Goal 277. Weak Mutation 237: tp2.Server.fixedLongList()Ljava/util/List;:208 - ReplaceConstant - 700000 -> 699999
   * Goal 278. Weak Mutation 238: tp2.Server.fixedLongList()Ljava/util/List;:208 - ReplaceConstant - 700000 -> 700001
   * Goal 279. Weak Mutation 239: tp2.Server.fixedLongList()Ljava/util/List;:209 - ReplaceConstant - 800000 -> 0
   * Goal 280. Weak Mutation 240: tp2.Server.fixedLongList()Ljava/util/List;:209 - ReplaceConstant - 800000 -> 1
   * Goal 281. Weak Mutation 241: tp2.Server.fixedLongList()Ljava/util/List;:209 - ReplaceConstant - 800000 -> -1
   * Goal 282. Weak Mutation 242: tp2.Server.fixedLongList()Ljava/util/List;:209 - ReplaceConstant - 800000 -> 799999
   * Goal 283. Weak Mutation 243: tp2.Server.fixedLongList()Ljava/util/List;:209 - ReplaceConstant - 800000 -> 800001
   * Goal 284. Weak Mutation 244: tp2.Server.fixedLongList()Ljava/util/List;:210 - ReplaceConstant - 900000 -> 0
   * Goal 285. Weak Mutation 245: tp2.Server.fixedLongList()Ljava/util/List;:210 - ReplaceConstant - 900000 -> 1
   * Goal 286. Weak Mutation 246: tp2.Server.fixedLongList()Ljava/util/List;:210 - ReplaceConstant - 900000 -> -1
   * Goal 287. Weak Mutation 247: tp2.Server.fixedLongList()Ljava/util/List;:210 - ReplaceConstant - 900000 -> 899999
   * Goal 288. Weak Mutation 248: tp2.Server.fixedLongList()Ljava/util/List;:210 - ReplaceConstant - 900000 -> 900001
   * Goal 289. Weak Mutation 249: tp2.Server.fixedLongList()Ljava/util/List;:211 - ReplaceConstant - 1000000 -> 0
   * Goal 290. Weak Mutation 250: tp2.Server.fixedLongList()Ljava/util/List;:211 - ReplaceConstant - 1000000 -> 1
   * Goal 291. Weak Mutation 251: tp2.Server.fixedLongList()Ljava/util/List;:211 - ReplaceConstant - 1000000 -> -1
   * Goal 292. Weak Mutation 252: tp2.Server.fixedLongList()Ljava/util/List;:211 - ReplaceConstant - 1000000 -> 999999
   * Goal 293. Weak Mutation 253: tp2.Server.fixedLongList()Ljava/util/List;:211 - ReplaceConstant - 1000000 -> 1000001
   * Goal 294. Weak Mutation 254: tp2.Server.fixedLongList()Ljava/util/List;:212 - ReplaceConstant - 1100000 -> 0
   * Goal 295. Weak Mutation 255: tp2.Server.fixedLongList()Ljava/util/List;:212 - ReplaceConstant - 1100000 -> 1
   * Goal 296. Weak Mutation 256: tp2.Server.fixedLongList()Ljava/util/List;:212 - ReplaceConstant - 1100000 -> -1
   * Goal 297. Weak Mutation 257: tp2.Server.fixedLongList()Ljava/util/List;:212 - ReplaceConstant - 1100000 -> 1099999
   * Goal 298. Weak Mutation 258: tp2.Server.fixedLongList()Ljava/util/List;:212 - ReplaceConstant - 1100000 -> 1100001
   * Goal 299. Weak Mutation 259: tp2.Server.fixedLongList()Ljava/util/List;:213 - ReplaceConstant - 1200000 -> 0
   * Goal 300. Weak Mutation 260: tp2.Server.fixedLongList()Ljava/util/List;:213 - ReplaceConstant - 1200000 -> 1
   * Goal 301. Weak Mutation 261: tp2.Server.fixedLongList()Ljava/util/List;:213 - ReplaceConstant - 1200000 -> -1
   * Goal 302. Weak Mutation 262: tp2.Server.fixedLongList()Ljava/util/List;:213 - ReplaceConstant - 1200000 -> 1199999
   * Goal 303. Weak Mutation 263: tp2.Server.fixedLongList()Ljava/util/List;:213 - ReplaceConstant - 1200000 -> 1200001
   * Goal 304. Weak Mutation 264: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:231 - ReplaceConstant - 0 -> 1
   * Goal 305. Weak Mutation 265: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:232 - ReplaceConstant - 1 -> 0
   * Goal 306. Weak Mutation 266: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:235 - ReplaceConstant - 1 -> 0
   * Goal 307. Weak Mutation 267: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceVariable entries -> exceptionsLists
   * Goal 308. Weak Mutation 268: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - InsertUnaryOp Negation of maxSizeLists
   * Goal 309. Weak Mutation 269: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - InsertUnaryOp IINC 1 maxSizeLists
   * Goal 310. Weak Mutation 270: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - InsertUnaryOp IINC -1 maxSizeLists
   * Goal 311. Weak Mutation 271: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceConstant - 1 -> 0
   * Goal 312. Weak Mutation 272: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceArithmeticOperator + -> %
   * Goal 313. Weak Mutation 273: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceArithmeticOperator + -> -
   * Goal 314. Weak Mutation 274: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceArithmeticOperator + -> *
   * Goal 315. Weak Mutation 275: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:236 - ReplaceArithmeticOperator + -> /
   * Goal 316. Weak Mutation 276: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:237 - ReplaceConstant - 0 -> 1
   * Goal 317. Weak Mutation 277: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:237 - InsertUnaryOp Negation of maxSizeLists
   * Goal 318. Weak Mutation 278: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:240 - ReplaceConstant - 0 -> 1
   * Goal 319. Weak Mutation 279: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:241 - ReplaceVariable bansLists -> exceptionsLists
   * Goal 320. Weak Mutation 280: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:241 - ReplaceVariable bansLists -> entries
   * Goal 321. Weak Mutation 281: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:241 - ReplaceConstant - 1 -> 0
   * Goal 322. Weak Mutation 282: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:243 - ReplaceConstant - 1 -> 0
   * Goal 323. Weak Mutation 283: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceVariable nodes -> entries
   * Goal 324. Weak Mutation 284: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceVariable nodes -> exceptionsLists
   * Goal 325. Weak Mutation 285: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceVariable nodes -> bansLists
   * Goal 326. Weak Mutation 286: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - InsertUnaryOp Negation of maxSizeLists
   * Goal 327. Weak Mutation 287: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - InsertUnaryOp IINC 1 maxSizeLists
   * Goal 328. Weak Mutation 288: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - InsertUnaryOp IINC -1 maxSizeLists
   * Goal 329. Weak Mutation 289: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceConstant - 1 -> 0
   * Goal 330. Weak Mutation 290: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceArithmeticOperator + -> %
   * Goal 331. Weak Mutation 291: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceArithmeticOperator + -> -
   * Goal 332. Weak Mutation 292: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceArithmeticOperator + -> *
   * Goal 333. Weak Mutation 293: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:244 - ReplaceArithmeticOperator + -> /
   * Goal 334. Weak Mutation 294: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:248 - ReplaceConstant - 0 -> 1
   * Goal 335. Weak Mutation 295: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:250 - ReplaceConstant - 0 -> 1
   * Goal 336. Weak Mutation 296: tp2.Server.finServer(I)Lkorat/finitization/IFinitization;:251 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Finitization finitization0 = (Finitization)Server.finServer(0);
      assertFalse(finitization0.areArraysHandledAsObjects());
  }

  //Test case number: 30
  /*
   * 26 covered goals:
   * Goal 1. tp2.Server.toString()Ljava/lang/String;: root-Branch
   * Goal 2. tp2.Server.<init>()V: root-Branch
   * Goal 3. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 4. Branch tp2.Server.toString()Ljava/lang/String;: root-Branch in context: tp2.Server:toString()Ljava/lang/String;
   * Goal 5. [Output]: tp2.Server.toString()Ljava/lang/String;:NonEmptyString
   * Goal 6. tp2.Server.<init>()V: Line 31
   * Goal 7. tp2.Server.<init>()V: Line 58
   * Goal 8. tp2.Server.<init>()V: Line 59
   * Goal 9. tp2.Server.<init>()V: Line 60
   * Goal 10. tp2.Server.<init>()V: Line 61
   * Goal 11. tp2.Server.<init>()V: Line 62
   * Goal 12. tp2.Server.toString()Ljava/lang/String;: Line 297
   * Goal 13. [METHOD] tp2.Server.<init>()V
   * Goal 14. [METHOD] tp2.Server.toString()Ljava/lang/String;
   * Goal 15. [METHODNOEX] tp2.Server.<init>()V
   * Goal 16. [METHODNOEX] tp2.Server.toString()Ljava/lang/String;
   * Goal 17. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 18. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 19. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 20. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 21. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 22. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   * Goal 23. Weak Mutation 301: tp2.Server.toString()Ljava/lang/String;:297 - ReplaceConstant - Server [lastUpdate= -> 
   * Goal 24. Weak Mutation 302: tp2.Server.toString()Ljava/lang/String;:297 - ReplaceConstant - , exceptions= -> 
   * Goal 25. Weak Mutation 303: tp2.Server.toString()Ljava/lang/String;:297 - ReplaceConstant - , bans= -> 
   * Goal 26. Weak Mutation 304: tp2.Server.toString()Ljava/lang/String;:297 - ReplaceConstant - ] -> 
   */

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Server server0 = new Server();
      String string0 = server0.toString();
      assertEquals("Server [lastUpdate=0, exceptions=(), bans={}]", string0);
  }

  //Test case number: 31
  /*
   * 22 covered goals:
   * Goal 1. tp2.Server.setTime(Ltp2/ITime;)V: root-Branch
   * Goal 2. tp2.Server.<init>()V: root-Branch
   * Goal 3. Branch tp2.Server.setTime(Ltp2/ITime;)V: root-Branch in context: tp2.Server:setTime(Ltp2/ITime;)V
   * Goal 4. Branch tp2.Server.<init>()V: root-Branch in context: tp2.Server:<init>()V
   * Goal 5. tp2.Server.<init>()V: Line 31
   * Goal 6. tp2.Server.<init>()V: Line 58
   * Goal 7. tp2.Server.<init>()V: Line 59
   * Goal 8. tp2.Server.<init>()V: Line 60
   * Goal 9. tp2.Server.<init>()V: Line 61
   * Goal 10. tp2.Server.<init>()V: Line 62
   * Goal 11. tp2.Server.setTime(Ltp2/ITime;)V: Line 51
   * Goal 12. tp2.Server.setTime(Ltp2/ITime;)V: Line 52
   * Goal 13. [METHOD] tp2.Server.<init>()V
   * Goal 14. [METHOD] tp2.Server.setTime(Ltp2/ITime;)V
   * Goal 15. [METHODNOEX] tp2.Server.<init>()V
   * Goal 16. [METHODNOEX] tp2.Server.setTime(Ltp2/ITime;)V
   * Goal 17. Weak Mutation 0: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 0
   * Goal 18. Weak Mutation 1: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 1
   * Goal 19. Weak Mutation 2: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> -1
   * Goal 20. Weak Mutation 3: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 59999
   * Goal 21. Weak Mutation 4: tp2.Server.<init>()V:31 - ReplaceConstant - 60000 -> 60001
   * Goal 22. Weak Mutation 5: tp2.Server.<init>()V:61 - ReplaceConstant - 0 -> 
   */

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Server server0 = new Server();
      RealTime realTime0 = new RealTime();
      server0.setTime(realTime0);
      assertEquals(1392409281320L, realTime0.getCurrentTime());
  }
}
